1.Linux中普通用户和ROOT用户对Java JDK的配置
	1.0 
		sudo apt-get install openjdk-8-jdk //这种方式安装后的目录位于：如下
		 ls /usr/lib/jvm/java-1.8.0-openjdk-amd64/
	1.1、Linux中普通用户和ROOT用户对Java JDK的配置 
		https://blog.csdn.net/MOONCOM/article/details/52683409?depth_1-utm_source=distribute.pc_relevant.none-task&utm_source=distribute.pc_relevant.none-task
		
		Linux中对对各种工具文件不需要想Windows中似的，还要先一步一步的安装，有的还需要配置环境变量，比如Windows对Java的安装过程。

		在Linux中，使用指令：tar zxvf ?文件名（注意空格）解压完 .tar.gz 文件，或使用指令：unzip 文件名 解压完 .zip 文件，只需要在Linux中对他们进行配置，便可以使用你下载的工具了，这里介绍一下Java JDK的配置。

		对Java JDK的配置分为两种情况，一种是ROOT用户进行配置，一种是普通用户进行配置。ROOT用户配置完成后，即为Linux下各用户（ROOT用户和各非ROOT用户）默认的JDK配置。而普通用户配置完后只对当前用户，也就是自己有效。

		当然，根据就近原则，若ROOT用户和当前用户都对JDK进行了配置，Linux使用当前用户配置的JDK信息。

		下面便分别说明ROOT和普通用户分别如何配置JDK。



		ROOT用户――修改/etc/profile文件

		首先，通过指令 ? ? cd ? ?/etc ?进入到配置文件所在的文件夹中。

		然后，通过指令 ? ? vi ? ? profile ?用vim编辑器打开profile文件，进入后，按键盘上的【A】键进入vim编辑器的编辑状态，在文件尾部加入JDK环境变量的配置，如下所示：

		export JAVA_HOME=/home/openam_jxdoe/jdk1.7.0_80
		export PATH=$JAVA_HOME/bin:$PATH
		export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar

		其中，PATH和CLASSPATH后面的值不需要改变，读者只需要修改JAVA_HOME后面的值即可，用你的Java JDK安装的位置代替 ?/home/openam_jxdoe/jdk1.7.0_80 即可。

		修改完后，按键盘上的【Esc】键退出vim编辑器的编辑状态，然后键盘输入指令 ? ? ?：wq ? ? ? 保存并退出vim编辑器。

		最后，通过指令 ? ?source profile ? 使Linux应用你刚配置好的profile文件，Java JDK 在Linux上便配置好了。

		（注意：在profile文件中除了上面三行代码外，最好加上 ? ? ? ??export JRE_HOME=$JAVA_HOME/jre ? ?，也就是说一共四行，因为众所周知Java包括jdk和jre，若你不配置jre，那么你便无法使用JVM，比如说，tomcat你就无法正常开启和关闭?）



		本文的原作者 ??http://blog.csdn.net/mooncom/article/details/52683409 ?，支持原著，决绝盗版。



		普通用户――修改当前用户目录下的 ?.bash_profile ?文件

		首先，通过指令 ? cd ?~ ? ?进入到当前用户所在的文件夹下。

		然后，通过指令 ? ? vi ? ? .bash_profile ? ? ?用vim编辑器打开 ?.bash_profile ? ?文件，进入后，按键盘上的【A】键进入vim编辑器的编辑状态，在文件尾部加入JDK环境变量的配置，如下所示：

		export JAVA_HOME=/home/openam_jxdoe/jdk1.7.0_80
		export PATH=$JAVA_HOME/bin:$PATH
		export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar


		其中，PATH和CLASSPATH后面的值不需要改变，读者只需要修改JAVA_HOME后面的值即可，用你的Java JDK安装的位置代替 ?/home/openam_jxdoe/jdk1.7.0_80 即可。

		修改完后，按键盘上的【Esc】键退出vim编辑器的编辑状态，然后键盘输入指令 ? ? ?：wq ? ? ? 保存并退出vim编辑器。

		最后，通过指令 ? ?source ?.bash_profile ? 使Linux应用你刚配置好的 ? .bash_profile ? ? 文件，Java JDK 在Linux上便配置好了。

		（注意：在profile文件中除了上面三行代码外，最好加上 ? ? ? ??export JRE_HOME=$JAVA_HOME/jre ? ?，也就是说一共四行，因为众所周知Java包括jdk和jre，若你不配置jre，那么你便无法使用JVM，比如说，tomcat你就无法正常开启和关闭?）



		好了，Java JDK的配置便结束了，强烈建议看到本篇文章的小伙伴们在配置 JAVA_HOME，PATH和CLASSPATH时，在后面加上JRE_HOME ? ，否则，你可能会在使用Java时碰到各种莫名其妙的错误。
		――――――――――――――――
		版权声明：本文为CSDN博主「霜月枫桥」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。
		原文链接：https://blog.csdn.net/MOONCOM/article/details/52683409
		
		
		1.1.1、
			 JAVA_HOME=/home/eink/soft_tools/java/jdk1.6.0_45
			 JRE_HOME=/home/eink/soft_tools/java/jdk1.6.0_45/jre
			 CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib
			 PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin 
			
			export JAVA_HOME=/home/eink/soft_tools/java/jdk1.6.0_45
			export JRE_HOME=/home/eink/soft_tools/java/jdk1.6.0_45/jre
			export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib
			export PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin 
			
			CLASSPATH 配置2：： make 命令执行，提示找不到javac。
			export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib
			
			CLASSPATH 配置2：：
			export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib
			
	1.2、Linux下非root用户安装jdk 
		https://blog.csdn.net/CHS007chs/article/details/86663436
		1.设置用户环境变量vi .bash_profile   或者是  vi   ~/.bashrc
		2.JAVA_HOME=/home/sgmm/jdk1.6.0_13  
		　CLASSPATH=$JAVA_HOME/lib:$JAVA_HOME/jre/lib 
		　PATH=$PATH:$JAVA_HOME/bin:$JAVA_HOME/jre/bin 
		　export PATH CLASSPATH JAVA_HOME 

		3.设置tomcat的环境变量export CATALINA_BASE=/home/sgmm/apache-tomcat-6.0.20 
		　　　　　　　　　　　export CATALINA_HOME=/home/sgmm/apache-tomcat-6.0.20 
		
	1.3 javac 命令不可用
		You are attempting to build with the incorrect version
		of javac.
		 
		Your version is: /bin/bash: javac: command not found.
		The correct version is: 1.6.
		 
		Please follow the machine setup instructions at
			http://source.android.com/download

		
		1.3.1 执行javac时，提示command not found 
			https://bbs.csdn.net/topics/320195233
			
		1.3.2 java 生效，javac没有生效的解决方法。
			8、如果还未生效，很有可能由于ubuntu中已有默认的jdk，如openjdk，所以，为了使默认使用的是我们安装的jdk，还要进行如下工作。
				　　sudo update-alternatives --install /usr/bin/java java /usr/lib/java/jdk1.6.0_41/bin/java 300
				　　sudo update-alternatives --install /usr/bin/javac javac /usr/lib/java/jdk1.6.0_41/bin/javac 300
				　　通过这一步将我们安装的jdk加入java选单。
				　　然后执行：
				　　update-alternatives --config java
					update-alternatives --config javac
			
	1.4 安装在普通用户下，重启Ubuntu后，java 命令不可用了。
		
	1.5. ubuntun 16.安装jdk 1.6 
		https://www.cnblogs.com/hwbq123/p/8190698.html
		https://www.cnblogs.com/hwbq123/p/8190698.html
		
		1.5.1、Linux中普通用户和ROOT用户对Java JDK的配置 
			https://blog.csdn.net/MOONCOM/article/details/52683409?depth_1-utm_source=distribute.pc_relevant.none-task&utm_source=distribute.pc_relevant.none-task
		1.5.2、ubuntu 16安装jdk1.6.45
			https://blog.csdn.net/mp295345033/article/details/78960697
		
			###################################################################################################################################################
				１、下载JDK1.6,你可以到官网去下载，下载时请看清自己的系统版本，记得一定要下载相应的版本。

			　　http://www.oracle.com/technetwork/java/javasebusiness/downloads/java-archive-downloads-javase6-419409.html#jdk-6u41-oth-JPR

				２、以下全是root用户下操作、root用户下操作、root用户下操作

				3、将下载的文件放置到/usr/lib/java目录下(需要手动创建java目录，到/usr/lib目录下mkdir java)，并修改文件的可执行权限，如chmod 777 jdk-6u45-linux-x64.bin

				(我下载了jdk-6u45-linux-x64.bin和jdk-6u45-linux-x64-rpm.bin，不会用后者，只能用前者。)

				4、安装文件， ./jdk-6u45-linux-x64.bin

				5、安装完毕后，则需配置系统环境   sudo vi /etc/environment，或配置用户环境变量vi /home/username/.bashrc，建立JAVAHOME,　CLASSPATH,　修改PATH变量

				  具体jdk版本号进入java目下看第一个文件夹



				我的jdk版本是那个文件夹的名字：   jdk1.6.0_45　　

				我的设置为：

				JAVAHOME=/home/eink/soft_tools/java/jdk1.6.0_45
				JRE_HOME=/home/eink/soft_tools/java/jdk1.6.0_45/jre
				CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib
				PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin
				
				
				******
				/usr/lib/soft_install/jdk1.6.0_45
				
				JAVAHOME=/usr/lib/soft_install/jdk1.6.0_45
				JRE_HOME=/usr/lib/soft_install/jdk1.6.0_45/jre
				CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib
				PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin 
				
				――――――――――――――――
				版权声明：本文为CSDN博主「杯中倒影__」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。
				原文链接：https://blog.csdn.net/mp295345033/article/details/78960697
				
				

				6、执行命令，使配置生效。source /etc/environment　( source /home/username/.bashrc )

				7、验证是否安装完毕，使用java -version或者直接使用javac，看其生效与否。



				我的直接成功了，第八步也就不做了。（为什么会有水印呢？？？）

				8、如果还未生效，很有可能由于ubuntu中已有默认的jdk，如openjdk，所以，为了使默认使用的是我们安装的jdk，还要进行如下工作。
				　　sudo update-alternatives --install /usr/bin/java java /usr/lib/java/jdk1.6.0_41/bin/java 300
				　　sudo update-alternatives --install /usr/bin/javac javac /usr/lib/java/jdk1.6.0_41/bin/javac 300
				　　通过这一步将我们安装的jdk加入java选单。
				　　然后执行：
				　　update-alternatives --config java
					update-alternatives --config javac
				
				#####################################################################################################################################
				
				
				#config java jdk1.7  envirment   安装目录为：/usr/local/tools/java
				#export JAVA_HOME=/usr/local/tools/java/jdk1.7.0_79  
				#export JRE_HOME=${JAVA_HOME}/jre  
				#export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib  
				#export PATH=${JAVA_HOME}/bin:$PATH 
				
				#config java jdk1.6  envirment   install root dir：/usr/lib/java/jdk1.6.0_45
				#export JAVA_HOME=/usr/lib/java/jdk1.6.0_45
				#export JRE_HOME=${JAVA_HOME}/jre  
				#export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib  
				#export PATH=${JAVA_HOME}/bin:$PATH 
				
				修改之前 PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games"
				
				JAVAHOME=/usr/lib/java/jdk1.6.0_45
				PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/java/jdk1.6.0_45/bin:/usr/lib/java/jdk1.6.0_45/jre/bin"
				CLASSPATH=/usr/lib/java/jdk1.6.0_45/lib:/usr/lib/java/jdk1.6.0_45/jre/lib

				将java安装到菜单中。
				sudo update-alternatives --install /usr/bin/java java /usr/lib/java/jdk1.6.0_45/bin/java 300
			　　sudo update-alternatives --install /usr/bin/javac javac /usr/lib/java/jdk1.6.0_45/bin/javac 300
			　　通过这一步将我们安装的jdk加入java选单。
			　　然后执行：
			　　update-alternatives --config java //选择jdk 版本
			　　update-alternatives --config javac	//选择jre版本。
	1.6 ubuntu 安装jdk1.7
		download::
		https://www.oracle.com/java/technologies/javase/javase7-archive-downloads.html
		
			 JAVAHOME=/home/eink/soft_tools/java/jdk1.7.0_80
			 JRE_HOME=/home/eink/soft_tools/java/jdk1.7.0_80/jre
			 CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib
			 PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin 
	1.7 
		ubuntu16 安装openjdk java1.7
		https://win9zz.blog.csdn.net/article/details/78252150? 
		
		sudo add-apt-repository ppa:openjdk-r/ppa  
		sudo apt-get update  
		sudo apt-get install openjdk-7-jdk 
		1
		2
		3
		如果ubuntu版本为16.10或其他：
		参考 http://blog.csdn.net/qq_33160790/article/details/77523618，使用openjdk java 7来安装。
		附上openjdk java 7下载地址：
		https://pan.baidu.com/s/1dEZ9F1Z 
		
		b,配置	b1,sudo vi /etc/environment (/home/username/.bashrc)
				
				b2,
				JAVAHOME=/home/eink/soft_tools/java/java-7-openjdk-amd64
				JRE_HOME=/home/eink/soft_tools/java/java-7-openjdk-amd64/jre
				CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib
				PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin
				
				b3,source /etc/environment (/home/username/.bashrc)
		c,
			sudo update-alternatives --install /usr/bin/javap javap /home/eink/soft_tools/java/java-7-openjdk-amd64/bin/javap 300
			sudo update-alternatives --install /usr/bin/javah javah /home/eink/soft_tools/java/java-7-openjdk-amd64/bin/javah 300
			sudo update-alternatives --install /usr/bin/javadoc javadoc /home/eink/soft_tools/java/java-7-openjdk-amd64/bin/javadoc 300
			sudo update-alternatives --install /usr/bin/jar jar /home/eink/soft_tools/java/java-7-openjdk-amd64/bin/jar 300
			sudo update-alternatives --install /usr/bin/jarsigner jarsigner /home/eink/soft_tools/java/java-7-openjdk-amd64/bin/jarsigner 300

2. ubuntu 16.4 卸载指定版本java 1.6,1.7 
	2.1 linux下卸载jdk1.7安装jdk1.8 
		https://blog.csdn.net/reee112/article/details/83036449?depth_1-utm_source=distribute.pc_relevant.none-task&utm_source=distribute.pc_relevant.none-task
3. linux jdk版本随时切换
	3.1. linux jdk版本随时切换
		https://www.cnblogs.com/fordreamxin/p/4287706.html
		
		3.1.1 
			使用 which java 命令找到当前java可执行程序的位置
			fordreamxin@compiler207:~$ which java
			/usr/bin/java
			 /usr/bin/目录下存放的多是用户安装的软件
		3.1.2 
			fordreamxin@compiler207:~$ ll /usr/bin/java
			lrwxrwxrwx 1 root root 22 Nov 13 06:18 /usr/bin/java -> /etc/alternatives/java*
			alternatives是一个linux下的多版本管理软件，利用它就可以实现jdk的版本切换，这点稍后再描述。先来alternatives目录地下看看有些什么东西。
			
			fordreamxin@compiler207:/etc/alternatives$ ll java
			lrwxrwxrwx 1 root root 36 Nov 13 06:17 java -> /usr/lib/jvm/java-6-sun/jre/bin/java*				
			原来该目录下放置了很多软件的版本引用，从这里可以找到当前软件版本(jdk)的实际位置
			
			fordreamxin@compiler207:/etc/alternatives$ ls /usr/lib/jvm/
			java-1.7.0-openjdk-amd64  java-6-sun  java-6-sun-1.6.0.26  java-7-openjdk-amd64
			在/usr/lib/jvm文件夹下时间存储了各个jdk版本的软件，而alternatives正是通过修改它的java引用达到版本切换的目的。
		3.1.3. 使用alternatives实现版本切换的方法如下
			
			1. 查看相应的jdk是否在 ubuntu的jdk菜单里，查看：
			sudo update-alternatives --config java
			sudo update-alternatives --config javac

			2.如果没有在菜单里可以如下方式添加：
			sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/java/jdk1.6.0_12/bin/java 300  //第二个路径为jdk安装路径
			sudo update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/java/jdk1.6.0_12/bin/javac 300 //第二个路径为jdk安装路径
			 注意：jdk1.6.0_12 版本不同会有变动

			3.
			sudo update-alternatives --config java
			sudo update-alternatives --config javac
			选择序号，回车即可；
			4.然后java -version,javac -version查看当前jdk版本
			
			但是使用alternatives需要sudo超级权限，也就是说这种切换是一种全局切换，同修改~/.bashrc或/etc/profile一样，一次操作，全局有效