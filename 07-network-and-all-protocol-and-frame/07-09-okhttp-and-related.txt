1.
	1.1 https://square.github.io/okhttp/
		
	1.2 okHttp各个module介绍
		https://blog.csdn.net/wei7017406/article/details/73189197 
	1.3 
		okHttp 是maven项目
		使用IntelliJ IDEA打开工程。
		转到【3】
	1.4 Android网络框架对比
		https://www.jianshu.com/p/3842b63c69c6 
2.关于OKHTTP3（一）源码编译
	https://www.freesion.com/article/88181387287/ 
	
	2.1 http原理浅谈：导入okhttp的源码到Android Studio并对框架进行定制 
		https://www.jianshu.com/p/fb6e9c99f800 
		
		测试验证：
		验证工程位置：*\Okhttp390Test
		框架版本：okhttp-3.9.0;okio-1.13.0;
		a,okhttp3.internal.Version;提示找不到
			这个okhttp源码项目编译出来的，可以从编译好的。androidstudio gradle下载好的对应版本的okhttp-3.9.0-sources.jar中拷贝过来用。
		b,org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement 错误: 程序包org.codehaus.mojo.animal_sniffer不存在 
			android studio使用中遇见的错误 
			https://www.tqwba.com/x_d/jishu/203926.html 
			http://stackoverflow.com/questions/29886882/android-studio-1-2-rc-proguard-warnings-on-squares-okio-library-reference
		
			查看：okio下的pom.xml
				<dependency>
				  <groupId>com.google.code.findbugs</groupId>
				  <artifactId>jsr305</artifactId>
				  <scope>provided</scope>
				</dependency>
				<dependency>
				  <groupId>org.codehaus.mojo</groupId>
				  <artifactId>animal-sniffer-annotations</artifactId>
				  <optional>true</optional>
				</dependency>
				
				版本：
				<version>1.1</version>
				
				gradle配置这个依赖库即可：
					implementation 'org.codehaus.mojo:animal-sniffer-annotations:1.1'
				属于maven仓库的jar，添加mavenCentral()仓库。
				
3. OKHTTP3（一）源码分析
	https://www.freesion.com/article/2734906565/ 
	3.1 Okhttp3源码分析
		https://www.jianshu.com/p/b0353ed71151 
	
	3.2 深入理解OkHttp源码及设计思想
		https://www.jianshu.com/p/fa0dcbfe05cd 
	3.3 
		okhttp3.9.0调试工程
		*\okhttp-source-research\okhttp-parent-3.9.0
		3.3.1 add unicode use
			okhttp3.RequestTest#unicodeTest
			
		okhttp3.mockwebserver.MockWebServerTest#regularResponseAndDisconnect
		
		"GET / HTTP/1.1" 在哪设置的？
		assertEquals("GET / HTTP/1.1", request.getRequestLine())
	3.4 使用OkHttp中的MockWebServer进行接口模拟测试
		https://blog.csdn.net/Mr_Tony/article/details/116562455 
		a，OkHttp3系列（二）MockWebServer使用
			https://www.cnblogs.com/weegee/p/13410049.html 
	3.5 okhttp-urlconnection
		okhttp3.OkUrlFactoryTest#testURLFilterRedirect
		怎么理解。
	3.6 okhttp-tests
		3.6.1,okhttp3.CallTest#getReturns500
			executeSynchronously("/");//换成其它地址就不行。为啥呢?
			通过【okhttp3.CallTest#executeSynchronously(java.lang.String, java.lang.String...)】添加打印url；
			是自动通过serverSocket获取的服务端的主机和端口。如：http://127.0.0.1:29937/，其中/就追加在地址后面
		3.6.2 okhttp3.CallTest#postBodyRetransmittedAfterAuthorizationFail()
			responded: HTTP/1.1 401 Client Error //如何理解？
			[部分参考]：【07-01-http-and-tools.txt;01.1】a,Http 401错误重现实验及解决办法
		3.6.3 okhttp3.CallTest#recoverWhenRetryOnConnectionFailureIsTrue
			a,有没有【server.enqueue(new MockResponse().setSocketPolicy(SocketPolicy.DISCONNECT_AFTER_REQUEST));】效果，原理？
				对比日志见：okhttp-parent-3.9.0工程的平级目录【temp-log-analyse-file】
			b,与okhttp3.OkHttpClient#retryOnConnectionFailure相关处有哪些？
			c,与okhttp3.internal.http.RetryAndFollowUpInterceptor相关处有哪些？
	3.x. 
		java.net.Proxy.Type 
		DIRECT,
        HTTP,
        SOCKS;
		三种类型的区别。
		
4. 进阶之光。
	测试适配：android-advanced-light\chapter_5\MoonOkHttp3
		程序转到测试项目目录（用java程序就行）：com.demo.okhttp390test.andvancelighttest 
5. okhttp源码导入及Maven构建文件pom.xml的格式
	https://blog.csdn.net/kcstrong/article/details/82189733 
6.面试还没搞懂OkHttp原理？看完这篇文章全明白了
	https://www.cnblogs.com/Android-Alvin/p/12530226.html 