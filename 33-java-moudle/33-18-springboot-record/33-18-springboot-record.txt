1.
	
2.Spring Boot
	https://baike.baidu.com/item/Spring%20Boot/20249767?fr=aladdin
	
	Spring Boot官网
	https://spring.io/projects/spring-boot
	
	Spring Boot框架入门教程（快速学习版）
	http://c.biancheng.net/spring_boot/
	
	Spring Boot 中文索引
	http://springboot.fun/
	
	官网：https://spring.io/projects/spring-boot
	
	2.5 springboot博客学习教程
		https://blog.csdn.net/weixin_50594210/article/details/121728149?
	2.6 IDEA创建Maven项目（使用springboot框架）
		https://blog.csdn.net/qq_20411471/article/details/111352095
	
	2.6 springboot中使用jwt
	
	2.7 书籍
		深入实践 Spring Boot -- source code（book）
			https://github.com/fantasticLx/SpringBoot-Book
			
		《一步一步学Spring Boot 2微服务项目实战》
			详细记录见：【14】
			
		《Spring Boot + Vue 全栈开发实战》
			《Spring Boot + Vue 全栈开发实战》官方案例
			https://gitee.com/lenve/spring-boot-vue-samples
			
			详细记录见：【15】
	2.8 
		https://docs.spring.io/spring-boot/docs/2.0.0.RC1/reference/html/configuration-metadata.html#configuration-metadata-annotation-processor
7. 12个优秀开源的 Spring Boot 学习项目，建议收藏
	https://zhuanlan.zhihu.com/p/454001666
	
	7.2 教程参考
		Vue、Spring Boot开发的Web前后端分离项目实战
		https://edu.51cto.com/course/23368.html
		
		【Java】springboot + vue前后端分离后台管理系统(一)
			https://www.h5w3.com/97749.html
			
		SpringBoot+VUE的前后端分离项目---《运动平台》
		
			https://www.bilibili.com/video/BV1q5411s7wH?p=41
		
		【2020版】4小时学会Spring Boot+Vue前后端分离开发
		https://www.bilibili.com/video/BV137411B7vB/?spm_id_from=333.788.recommend_more_video.1
			{
				加楠哥微信：nnsouthwind，免费获取海量学习资源、技术答疑。
				笔记、源码链接: https://pan.baidu.com/s/1PSiiqtRY_JrrDAZPB5zNNQ 提取码: kmy3
			}
	7.3 springboot注解
			7.3.1 @ConfigurationProperties 注解使用姿势，这一篇就够了
				https://blog.csdn.net/yusimiao/article/details/97622666
	7.4 SpringBoot实现OA自动化办公管理系统源码+详细讲解教程+开发文档
		7.4.0 搜索关键字：[springboot oa][oasys]
		https://www.bilibili.com/read/cv14011798
		
		https://blog.csdn.net/m0_68850571/article/details/124866317
			[拷贝了7.4.5]
		https://download.csdn.net/download/xiaohua1992/14041562?
			[拷贝了7.4.5]
		https://github.com/doudoutangs/oa_system
			
		7.4.5 https://github.com/misstt123/oasys
			【开源，完整】
			【oasys是一个OA办公自动化系统，使用Maven进行项目管理，
				基于springboot框架开发的项目，mysql底层数据库，
				前端采用freemarker模板引擎，Bootstrap作为前端UI框架，集成了jpa、mybatis等框架。】
				
				添加用户薪水是空字符串报错，[salary=, imgPath=null]
				
				
				账号：admin 密码：123456
				账号：soli 密码：123456
				
				cn.gson.oasys.services.daymanage.DaymanageServices#aboutmeschedule
					两个函数参数数据一样，但结果却不同。
					List<ScheduleList> myschedule = daydao.findByUser(user);
					List<ScheduleList> otherschedule = daydao.findByUsers(users);
				bug：
					系统管理-类型管理-新增时（新增，aoa_test,测试），结果把第一条记录系统管理给修改了。
					调试代码：cn.gson.oasys.controller.system.TypeSysController#testMess和session保存的值有关。
					
					分析：原因应该是：先点击编辑第一个条目，但没保存，而是点击取消，此时后端的的session并没有删除typeid。
				系统管理-菜单管理	
					cn.gson.oasys.controller.system.MenuSysController#testsysmenu
						systemcontrol/menumanage
						systemcontrol/menumanage.ftl
					刷新：href=""，链接地址为空，但实际地址为：http://localhost/testsysmenu，如何做到的呢？
					
					cn.gson.oasys.controller.system.MenuSysController#changeSortId
						@SessionAttribute("userId")//取session中的属性作为参数
						
						关联：
						cn.gson.oasys.controller.login.LoginsController#loginCheck
						session.setAttribute("userId", user.getUserId());
					菜单修改，对于一级菜单的修改，父id修改是错误的：原本父id为0的，点击修改，不动内容，提交后父id变了。
				用户管理-职位管理
					添加职位成功后，提示框
					../common/modalTip.ftl
					src/main/resources/static/js/modalTip.js
					
					$("#thismodal").modal("toggle");//含义
			7.4.5.2 
				https://gitee.com/aaluoxiang/oa_system
			
		7.4.6 https://github.com/memoryoverflow/OA
		
		https://github.com/weizhiqiang1995/skyeye
			{智能办公OA系统[SpringBoot2-快速开发平台]，适用于医院，学校，中小型企业等机构的管理}
		https://github.com/18121259693/projectoa
			{华理网院本科毕业设计 - 企业OA后台管理系统 基于springboot amazeui等 开发于2018年，仅为学习使用}
			
		https://github.com/citrucn/OASys
			{基于 SpringCloud 和 Vue3 的OA系统}
		
		https://github.com/yintenaite/OASystem
			OA系统部分功能：登录、部门、权限。(ssh、jQuery)
			OA系统部分功能：登录、部门、权限。使用struts,hibernate,spring完成，前端使用现成模板，js,jQuery完成。与后端交互部分用ajax(jQuery)。
		https://github.com/huoqibin/OASystem
			{SpringBoot+Activiti+Bootstrap实现的办公自动化系统}
	7.5 SpringBoot 2.3.x oauth2 server, SSO 单点登录
		https://github.com/jobmission/oauth2-server
		https://github.com/githubzengzhifeng/springboot-security-oauth2
		https://github.com/odenktools/springboot-oauth2-jwt
		
	7.6 https://gitee.com/aaluoxiang/GarbageSort
		【垃圾识别精灵 是一个 基于 uni-app 开发 微信小程序，
		使用 SpringBoot2 搭建后端服务，使用 Swagger2 构建 Restful 接口文档，实现了 文字查询、语音识别、图像识别其垃圾分类的功能。】
8. Springboot配置mybatis
	8.1 Springboot配置mybatis打印sql日志
		https://blog.csdn.net/m0_54853503/article/details/124422818
		{
			只需要在application.yml配置文件中加上以下几行内容就OK了

			# 配置slq打印日志
			mybatis-plus:
				#配置mybatis sql日志
			  configuration:
				log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
		}
		
	8.2 数据库字段为json类型，如mysql5.7及以上版本
		项目运行异常。类型异常。
		模块的配置文件中添加如下代码：
		{
			mybatis:
				#配置支持json数据库字段类型
				typeHandlersPackage: com.ibotn.common.core.utils.json
		}
	
	8.3 mybatis-plus配置
		{
			# mybatis-plus配置
			mybatis-plus:
				# 搜索指定包别名
				typeAliasesPackage: com.ibotn.child
				# 配置mapper的扫描，找到所有的mapper.xml映射文件
				mapperLocations: classpath:mapper/**/*.xml
				#配置支持json数据库字段类型
				typeHandlersPackage: com.ibotn.common.core.utils.json
				#配置mybatis sql日志
				configuration:
				  log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
		}
9.SpringBoot实现权限控制
	9.1.SpringBoot整合SpringSecurity实现权限控制
		{博主系列文章}
		{
			《SpringBoot整合SpringSecurity实现权限控制（一）》
				https://blog.csdn.net/jpgzhu/article/details/119870279
				{重要关联连接：
					《手把手教你通过SpringBoot实现邮箱注册码验证》
						https://zhuhuix.blog.csdn.net/article/details/119533833
					《Vue+SpringBoot 实现用户头像上传（附前后端源码）》	
						https://zhuhuix.blog.csdn.net/article/details/119796747					
				}
			《SpringBoot整合SpringSecurity实现权限控制（二）：权限数据基本模型设计》
				{https://zhuhuix.blog.csdn.net/article/details/119885703?}
			《SpringBoot整合SpringSecurity实现权限控制（三）：前端动态装载路由与菜单》
				{https://zhuhuix.blog.csdn.net/article/details/119991687?}
			...
			SpringBoot整合SpringSecurity实现权限控制（九）：快速实现页面缓存
				https://zhuhuix.blog.csdn.net/article/details/121372033
		}
		{
			前端
				https://gitee.com/zhuhuix/startup-frontend
			后端
				https://gitee.com/zhuhuix/startup-backend
				{forked:
					https://gitee.com/einkee/startup-backend.git
				}
		}
	9.2 SpringBoot基础-权限管理1
		https://blog.csdn.net/weixin_46899412/article/details/123699326
		{
			源码是本仓库中的demo0326文件
			https://gitee.com/AGi_R/interceptor
			{fork}
			https://gitee.com/einkee/interceptor.git
		}
		9.2.2 SpringBoot基础-权限管理2
			https://blog.csdn.net/weixin_46899412/article/details/123732794?
	9.3 springboot 实现权限管理（一）
		https://blog.csdn.net/qq_44654974/article/details/122638550
		
10 Springboot+JPA打印SQL日志
	https://blog.csdn.net/tiantang_1986/article/details/124627785

11 运行启动SpringBoot项目：
	11.1 运行启动SpringBoot项目报错端口被占用
		Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
		2022-07-13 08:30:40.468 ERROR 13900 --- [  restartedMain] o.s.b.d.LoggingFailureAnalysisReporter   : 

		***************************
		APPLICATION FAILED TO START
		***************************

		Description:

		The Tomcat connector configured to listen on port 80 failed to start. The port may already be in use or the connector may be misconfigured.

		Action:

		Verify the connector's configuration, identify and stop any process that's listening on port 80, or configure this application to listen on another port.
		
		a,解决
			第一种，修改端口号，不使用80端口，而使用其他端口号，比如使用81端口，修改springboot的配置文件application.yml即可.
		b,第二种，但我们一定要使用80端口怎么办，杀死占用了80端口的进程。

			打开DOS窗口，执行[netstat -aon|findstr 80]命令查看是什么占用了80端口，蓝色框内就是占用进程的ID号
			
			如果关闭该进程失败，解决可以参考：nginx: [emerg] bind() to 0.0.0.0:80 failed;[https://blog.csdn.net/cnds123321/article/details/113309358?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162359643716780271531330%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&request_id=162359643716780271531330&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_v2~rank_v29-4-113309358.pc_v2_rank_blog_default&utm_term=%E6%97%A0%E6%B3%95%E7%BB%88%E6%AD%A2+PID+%E4%B8%BA+4+%E7%9A%84%E8%BF%9B%E7%A8%8B%E3%80%82%E3%80%81&spm=1018.2226.3001.4450]
			
			然后执行taskkill /pid 4 /f关闭这个进程，其中4就是上面的进程ID
	11.2 类文件具有错误的版本 61.0,应为52.0
		mybatis-spring-3.0.1类文件具有错误的版本 61.0,应为52.0
		https://blog.csdn.net/qq_42460564/article/details/128257188
		
		博文内关联：Springbot启动报错-类文件具有错误的版本 61.0, 应为 52.0
			{SpringBoot使用了3.0或者3.0以上，
			因为Spring官方发布从Spring6以及SprinBoot3.0开始最低支持JDK17，所以仅需将SpringBoot版本降低为3.0以下即可。}
	
	11.3 SpringBoot - 如何使用mvn spring-boot:run命令启动项目？
		https://blog.csdn.net/goodjava2007/article/details/126604232
		
		mvn spring-boot:run 是一个命令，是一个插件的执行命令。
		
		启动方式
			基于SpringBoot框架开发的项目，常见的有四种项目启动的方式：
			A. 直接使用IDEA运行启动类中的MAIN()方法;
			B. 使用mvn spring-boot:run 命令，通过执行spring-boot插件的run目标，来启动项目；
			C. 项目打成JAR包后通过 java -jar 命令启动项目；
			D. 项目打成WAR包后通过WEB容器启动。
			————

			
12,编程帮学习记录
	在该项目中执行以下 mvn 命令查看器依赖树。
	mvn dependency:tree
13 Spring Boot实战 ,丁雪丰 (译者) .pdf

	作者先后参与了Spring官方文档、《Spring专业开发指南》和《Spring攻略》的翻译。
	Manning那本著名的《Spring实战》的作者再度接受挑。《Spring实战（第4版）》。
	
	Spring Boot的Actuator让你能一窥应用程序运行时的内部工作细节，看看Spring应用程序上下
	文里都有哪些Bean， Spring MVC控制器是怎么与路径映射的，应用程序都能取到哪些配置属性，
	诸如此类。
	
	你可以在Manning出版社的网站上下载书中应用程序的完整代码，地址是www.manning.com/
	books/spring-boot-in-action。
	
	3.1.3　掀开自动配置的神秘面纱
		 想要深入了解Spring Security，可以参考《Spring实战（第4版）》中的第9章和第14章。
		application.properties和application.yml文件能放在以下四个位置。
		
	3.2.1 自动配置微调	
			，让服务器监听不同的端口，你所要做的就是设置server.port属性。
			要是只改一次，可以用命令行参数：
			$ java -jar readinglist-0.0.1-SNAPSHOT.jar --server.port=8000

			但如果希望端口变更时间更长一点，可以在其他支持的配置位置上设置server.port。例
			如，把它放在应用程序Classpath根目录的application.yml文件里：
			server:
			  port: 8000
			  
			在application.yml中，它们可能是这样的：
				server:
					port: 8443
				  ssl:
					key-store: file:///path/to/mykeys.jks
				
				  key-store-password: letmein
				  key-password: letmein
			
			除了服务器的端口，你还可能希望服务器提供HTTPS服务。为此，第一步就是用JDK的
			keytool工具来创建一个密钥存储（keystore）：
			$ keytool -keystore mykeys.jks -genkey -alias tomcat -keyalg RSA
		
		
		3. 配置日志
			默认情况下， Spring Boot会用Logback（http://logback.qos.ch）来记录日志，
	4.3.2 使用 Selenium 测试 HTML 页面
		对于HTML应用程序测试，有一个更好的选择——Selenium（www.seleniumhq.org）
14 《一步一步学Spring Boot 2微服务项目实战》
	前言：
		GitHub 源代码下载地址： git@github.com:huangwenyi10/stepbysteplean-springboot.git
		教学视频下载地址： https://pan.baidu.com/s/1ASxjEcvESA2T6ISbmAmkYQ
	1.
		Servlet must not be null-Unable to start embedded Tomcat
		详情见：【./Servlet must not be null-Unable to start embedded Tomcat.txt】

		参考分析：SprintBoot项目一直报“Servlet must not be null”
			https://bbs.csdn.net/topics/397800545?list=15028695
			
		分析a：打印和ServletWebServerApplicationContext相关。
		分析b：通过排查，关闭可疑或代码，本身都是小demo，可能还不完整；排查到@ServletComponentScan注解使用，tomcat无法启动。
			com.example.demo.MySpringBootApplication
		
			b1:spring-mvc.xml
				<bean id="druidStatFilter" class="org.springframework.boot.web.servlet.ServletRegistrationBean">
				</bean>
			b1：参考【第6章使用过滤器和监听器】后，这个问题排查解决了。
				@ServletComponentScan
					
				@WebFilter
					
				@WebListener
					com.example.demo.listener.AyUserListener
					添加redis代码修复后就可以了。
	第2章集成MySQL数据库 
		q1：Springboot配置druid数据源出现“localhost 将您重定向的次数过多”解决方案
			访问地址：：http://127.0.0.1:8080/druid/login.html
		
			https://blog.csdn.net/weixin_55418082/article/details/124517111
			
			
			发现：com.example.demo.filter.DruidConfiguration#druidStatViewServlt单词不完整，修改如下：
				com.example.demo.filter.DruidConfiguration#druidStatViewServlet
				访问正常。
		2.1 SpringBoot整合Druid配置监控页，非常详细
			https://blog.csdn.net/qq_45926912/article/details/122655701
		2.3 踩坑！！！ Druid登录页点击无效
			https://blog.csdn.net/zcwdsada/article/details/120057583
			
			《Druid输入用户名和密码登录不进去》
				https://blog.csdn.net/yxf15732625262/article/details/84978798?
			参考：
				Spring boot、Spring Security和Druid集成后，因csrf校验开启，不能登录http://localhost:8086/druid/login.html的解决办法
				https://blog.csdn.net/QUDIHUAI/article/details/84878582
				
				查看注解位置：@EnableWebSecurity
				添加：http.csrf().ignoringAntMatchers("/druid/*")
			分析查看日志：
				Invalid CSRF token found for http://localhost:8080/druid/submitLogin
		2.5 DruidDataSource-mysql-CommunicationsException
			详情见：【2022-11-12-DruidDataSource-mysql-CommunicationsException.txt】
			确认数据库及驱动没问题。是java版问题，使用默认的idea-2021.2.3自带的jre时报错。缓存本地jdk-1.8后正常。
			
	第3章集成Spring Data JPA
		比如可以使用自findBy 、 Like 、 in 等关键字，
		其中 findBy 可以用 read 、 readBy 、 query 、 que叩By 、 get、 getBy 来代替。关于查询关
		键字的更多内容 ， 大家可以到官方网站（ https://docs.spring. io/spring-data/data-jpa/docs/
		current/reference/html/ ） 查看
		
		项目在idea-2021-2.3中打开时jpa提示：
		JPA Buddy Trial
		Early access version of the JPA Buddy has been expired.
		Please visit https://jpa-buddy.com/extended-trial-expired
		page
		for new information or update the plugin from the official
		plugins repository.
	第14章集成Spring Security 	
		q1，java.lang.IllegalArgumentException: There is no PasswordEncoder mapped for the id "null"
		
			https://blog.csdn.net/deniro_li/article/details/116322581
			https://blog.csdn.net/weixin_44231805/article/details/121696107?
15 《Spring Boot + Vue 全栈开发实战》
	1. 
		chapter01-2
			可以直接使用 mvn 命令启动项目
			mvn spring-boot:run
			
			mvn package
				java -jar target/java_bottom_level_learning-1.0-SNAPSHOT.jar
				
				java jar 没有主清单属性_Spring Boot jar中没有主清单属性的解决方法
					https://javaforall.cn/197108.html
					
				打包记录：
					 'build.plugins.plugin.version' for org.springframework.boot:spring-boot-maven-plugin is missing. @ line 58, column 21
					[WARNING] 
					[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.
					[WARNING] 
					[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.
					
					
					##没有配置版本号。
					#使用如下方式配置，自动下载对应版本的插件。
						<parent>
							<groupId>org.springframework.boot</groupId>
							<artifactId>spring-boot-starter-parent</artifactId>
							<version>2.0.3.RELEASE</version><!-- lookup parent from repository -->
						</parent>
	2.	
			keytool -genkey -alias tomcathttps -keyalg RSA -keysize 2048 -keystore sang-2.p12 -validity 365
			chapter01-2
				需要配置tls https 后才能访问
		2.5 Properties 配置
			如果开发者不想使用 application.properties 作为配置文件名， 也可以自己定义。例如，在 resources 目录下创
			建一个配置文件 app.properties ， 然后将项目 打成 jar 包，打包成功后 ，使用如下命令运行 ：
			java -jar chapter02-2-0.0.1- SNAPSHOT . jar --spring.config.name=app
			在运行时再指定配置文件的名字。使用 spring.config.location 可以指定配置文件所在目录（注
			意需要以／结束〉 ，代码如下：
			java -jar chapter02-2-0.0.1- SNAPSHOT . jar --spring.config.name=app
			--spring.config.location=classpath:/
		2.8 Profile
			Spring Boot 中约定的不同环境下配置文件名称规则为
				application-{profile}.properties, profile 占位符表示当前环境的名称
				首先在 resources 目录下创建两个配置文件 ： application-dev.properties 和 application-prod.prope此时。
				2 . 配置 application . prope叫es
				然后在 application.properties 中进行配置 ：spring.profiles.active=dev
				4.项目启动时配置
					java - jar chapterOl-3-00.1-SNAPSHOT.jar --spring.profiles.active=prod
	5. 
		 连接数据库异常：
		 详情见：【15-04-mysql-use-record.txt，24】