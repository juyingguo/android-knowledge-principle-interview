1.
	
2.Spring Boot
	https://baike.baidu.com/item/Spring%20Boot/20249767?fr=aladdin
	
	Spring Boot官网
	https://spring.io/projects/spring-boot
	
	Spring Boot框架入门教程（快速学习版）
	http://c.biancheng.net/spring_boot/
	
	Spring Boot 中文索引
	http://springboot.fun/
	
	官网：https://spring.io/projects/spring-boot
	
	2.5 springboot博客学习教程
		https://blog.csdn.net/weixin_50594210/article/details/121728149?
	2.6 IDEA创建Maven项目（使用springboot框架）
		https://blog.csdn.net/qq_20411471/article/details/111352095
	
	2.6 springboot中使用jwt
7. 12个优秀开源的 Spring Boot 学习项目，建议收藏
	https://zhuanlan.zhihu.com/p/454001666
	
	7.2 教程参考
		Vue、Spring Boot开发的Web前后端分离项目实战
		https://edu.51cto.com/course/23368.html
		
		【Java】springboot + vue前后端分离后台管理系统(一)
			https://www.h5w3.com/97749.html
			
		SpringBoot+VUE的前后端分离项目---《运动平台》
		
			https://www.bilibili.com/video/BV1q5411s7wH?p=41
		
		【2020版】4小时学会Spring Boot+Vue前后端分离开发
		https://www.bilibili.com/video/BV137411B7vB/?spm_id_from=333.788.recommend_more_video.1
			{
				加楠哥微信：nnsouthwind，免费获取海量学习资源、技术答疑。
				笔记、源码链接: https://pan.baidu.com/s/1PSiiqtRY_JrrDAZPB5zNNQ 提取码: kmy3
			}
	7.3 springboot注解
			7.3.1 @ConfigurationProperties 注解使用姿势，这一篇就够了
				https://blog.csdn.net/yusimiao/article/details/97622666
	7.4 SpringBoot实现OA自动化办公管理系统源码+详细讲解教程+开发文档
		7.4.0 搜索关键字：[springboot oa][oasys]
		https://www.bilibili.com/read/cv14011798
		
		https://blog.csdn.net/m0_68850571/article/details/124866317
			[拷贝了7.4.5]
		https://download.csdn.net/download/xiaohua1992/14041562?
			[拷贝了7.4.5]
		https://github.com/doudoutangs/oa_system
			
		7.4.5 https://github.com/misstt123/oasys
			【开源，完整】
			【oasys是一个OA办公自动化系统，使用Maven进行项目管理，
				基于springboot框架开发的项目，mysql底层数据库，
				前端采用freemarker模板引擎，Bootstrap作为前端UI框架，集成了jpa、mybatis等框架。】
				
				添加用户薪水是空字符串报错，[salary=, imgPath=null]
			
			7.4.5.2 
				https://gitee.com/aaluoxiang/oa_system
			
		7.4.6 https://github.com/memoryoverflow/OA
		
		https://github.com/weizhiqiang1995/skyeye
			{智能办公OA系统[SpringBoot2-快速开发平台]，适用于医院，学校，中小型企业等机构的管理}
		https://github.com/18121259693/projectoa
			{华理网院本科毕业设计 - 企业OA后台管理系统 基于springboot amazeui等 开发于2018年，仅为学习使用}
			
		https://github.com/citrucn/OASys
			{基于 SpringCloud 和 Vue3 的OA系统}
		
		https://github.com/yintenaite/OASystem
			OA系统部分功能：登录、部门、权限。(ssh、jQuery)
			OA系统部分功能：登录、部门、权限。使用struts,hibernate,spring完成，前端使用现成模板，js,jQuery完成。与后端交互部分用ajax(jQuery)。
		https://github.com/huoqibin/OASystem
			{SpringBoot+Activiti+Bootstrap实现的办公自动化系统}
	7.5 SpringBoot 2.3.x oauth2 server, SSO 单点登录
		https://github.com/jobmission/oauth2-server
		https://github.com/githubzengzhifeng/springboot-security-oauth2
		https://github.com/odenktools/springboot-oauth2-jwt
		
	7.6 https://gitee.com/aaluoxiang/GarbageSort
		【垃圾识别精灵 是一个 基于 uni-app 开发 微信小程序，
		使用 SpringBoot2 搭建后端服务，使用 Swagger2 构建 Restful 接口文档，实现了 文字查询、语音识别、图像识别其垃圾分类的功能。】
8. Springboot配置mybatis
	8.1 Springboot配置mybatis打印sql日志
		https://blog.csdn.net/m0_54853503/article/details/124422818
		{
			只需要在application.yml配置文件中加上以下几行内容就OK了

			# 配置slq打印日志
			mybatis-plus:
				#配置mybatis sql日志
			  configuration:
				log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
		}
		
	8.2 数据库字段为json类型，如mysql5.7及以上版本
		项目运行异常。类型异常。
		模块的配置文件中添加如下代码：
		{
			mybatis:
				#配置支持json数据库字段类型
				typeHandlersPackage: com.ibotn.common.core.utils.json
		}
	
	8.3 mybatis-plus配置
		{
			# mybatis-plus配置
			mybatis-plus:
				# 搜索指定包别名
				typeAliasesPackage: com.ibotn.child
				# 配置mapper的扫描，找到所有的mapper.xml映射文件
				mapperLocations: classpath:mapper/**/*.xml
				#配置支持json数据库字段类型
				typeHandlersPackage: com.ibotn.common.core.utils.json
				#配置mybatis sql日志
				configuration:
				  log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
		}
9.SpringBoot实现权限控制
	9.1.SpringBoot整合SpringSecurity实现权限控制
		{博主系列文章}
		{
			《SpringBoot整合SpringSecurity实现权限控制（一）》
				https://blog.csdn.net/jpgzhu/article/details/119870279
				{重要关联连接：
					《手把手教你通过SpringBoot实现邮箱注册码验证》
						https://zhuhuix.blog.csdn.net/article/details/119533833
					《Vue+SpringBoot 实现用户头像上传（附前后端源码）》	
						https://zhuhuix.blog.csdn.net/article/details/119796747					
				}
			《SpringBoot整合SpringSecurity实现权限控制（二）：权限数据基本模型设计》
				{https://zhuhuix.blog.csdn.net/article/details/119885703?}
			《SpringBoot整合SpringSecurity实现权限控制（三）：前端动态装载路由与菜单》
				{https://zhuhuix.blog.csdn.net/article/details/119991687?}
			...
			SpringBoot整合SpringSecurity实现权限控制（九）：快速实现页面缓存
				https://zhuhuix.blog.csdn.net/article/details/121372033
		}
		{
			前端
				https://gitee.com/zhuhuix/startup-frontend
			后端
				https://gitee.com/zhuhuix/startup-backend
				{forked:
					https://gitee.com/einkee/startup-backend.git
				}
		}
	9.2 SpringBoot基础-权限管理1
		https://blog.csdn.net/weixin_46899412/article/details/123699326
		{
			源码是本仓库中的demo0326文件
			https://gitee.com/AGi_R/interceptor
			{fork}
			https://gitee.com/einkee/interceptor.git
		}
		9.2.2 SpringBoot基础-权限管理2
			https://blog.csdn.net/weixin_46899412/article/details/123732794?
	9.3 springboot 实现权限管理（一）
		https://blog.csdn.net/qq_44654974/article/details/122638550
		
10 Springboot+JPA打印SQL日志
	https://blog.csdn.net/tiantang_1986/article/details/124627785

11 运行启动SpringBoot项目报错：
	11.1 运行启动SpringBoot项目报错端口被占用
		Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
		2022-07-13 08:30:40.468 ERROR 13900 --- [  restartedMain] o.s.b.d.LoggingFailureAnalysisReporter   : 

		***************************
		APPLICATION FAILED TO START
		***************************

		Description:

		The Tomcat connector configured to listen on port 80 failed to start. The port may already be in use or the connector may be misconfigured.

		Action:

		Verify the connector's configuration, identify and stop any process that's listening on port 80, or configure this application to listen on another port.
		
		a,解决
			第一种，修改端口号，不使用80端口，而使用其他端口号，比如使用81端口，修改springboot的配置文件application.yml即可.
		b,第二种，但我们一定要使用80端口怎么办，杀死占用了80端口的进程。

			打开DOS窗口，执行[netstat -aon|findstr 80]命令查看是什么占用了80端口，蓝色框内就是占用进程的ID号
			
			如果关闭该进程失败，解决可以参考：nginx: [emerg] bind() to 0.0.0.0:80 failed;[https://blog.csdn.net/cnds123321/article/details/113309358?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162359643716780271531330%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fblog.%2522%257D&request_id=162359643716780271531330&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_v2~rank_v29-4-113309358.pc_v2_rank_blog_default&utm_term=%E6%97%A0%E6%B3%95%E7%BB%88%E6%AD%A2+PID+%E4%B8%BA+4+%E7%9A%84%E8%BF%9B%E7%A8%8B%E3%80%82%E3%80%81&spm=1018.2226.3001.4450]
			
			然后执行taskkill /pid 4 /f关闭这个进程，其中4就是上面的进程ID
