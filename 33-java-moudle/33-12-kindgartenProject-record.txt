1.
	
2. server
	2.7 
	2.8 git私有仓库：http://47.112.198.102:10078/user/sign_up_my_eink
	
		git 私服公司账号。
		私服地址浏览器打不开，使用firfox浏览器，network.security.ports.banned.override。
			firfox 在地址栏输入,about:config 回车输入。
			【选择字符串类型，填写使用的端口号】
			参考：
			https://www.liqucn.com/article/1210741.shtml
		谷歌浏览器：属性-目标-添加：--explicitly-allowed-ports=10080。
		
	2.9 测试服放开下8897端口
	2.10
	 https://note.youdao.com/s/AbyFZ4kQmyeink  这是基于若依分离版整出来的服务端工程相关简陋说明。
	后面不论是用若依的分离版还是微服务版，相关技术选型及编程规约都是一样的  
	后端的小伙伴们可以先看下 实际开发技术链是基于java8 + springboot + mybatis + mysql开展
	
	2.11 若依管理系统
		http://www.ruoyi.vip/
	2.12 https://www.showdoc.com.cn/user/login
	2.13 svn 文档
		https://192.168.1.30:8443/svn/iBotn/KINDMGR
	2.14 这是mysql相关规范约定
		https://note.youdao.com/s/boGduIGl 		
	
	2.15 
		2.15.1 本地运行，接口文档
			{
				http://localhost:8080/doc.html
				{含有登录相关}
				{已经加入密码加密，本地服务，需要使用线上环境登录查看对应加密后的密码}
				{同时将请求地址，加入网关配置的白名单中}如{- /auth/chooseLogin}
				{登录返回的access_token作为其它接口请求头Authorization的值使用}
			}
		
		2.15.2 
			微服务版：8080端口,需要开启网关服务，通过网关端口8080自动转到对应应用模块端口。
			同时也需要开启权限服务。
				只启动应用服务，可以直接访问http://localhost:{modulePort}/doc.html
				{
					如果提示Authorization不能为空。开启认证，网关服务，从总端口8080进入后，获取该值，保存使用。【2.15.1】
					
					http://localhost:9204/doc.html
				}
			配置增强，格式比直接swagger默认规范些。
				 module_yaml配置
				 {
					# 开启增强模式
					knife4j:
						enable: true
				 }
				 # 开启增强模式
					knife4j:
					enable: true
		2.15.3  
			swagger : http://127.0.0.1:9204/swagger-ui/index.html
			端口号是模块端口.
			{
				无授权的情况下可以独立访问。
			}
		
	2.16 测试环境
		测试环境（kindmanager）：120.78.254.91    root    Qazxdr!@!*myeink
		
		ibotn aliyun 开发新服务器地址：
		47.112.198.102   root  Qazxdr!@!*myeink
		
		kindmanager项目开发环境地址：
		http://kind.ibotn.com/login?redirect=%2Findex
		
		kindmanager项目测试环境地址：
		http://test.ibotn.com
	2.17 kind.ibotn.com 后端开发机域名
	
	2.18 管理系统
		单体前后端分离：http://47.112.198.102:10078/NLFD/kindergartenProj.git
		cloud版： http://47.112.198.102:10078/zellen/ibotn-cloud.git
		
		front ui ：
			http://47.112.198.102:10078/zhonhai/kinderGardenAdmin.git

	2.19 redis数据库
		47.112.198.102
		密码：redis!123myeink
		
	2.20 新项目mysql数据库 
		2.20.1 新项目kind mysql数据库 
			IP：47.112.198.102 
			端口：3304  
			账密：root  rootmyeink
			使用docker管理mysql
			docker exec -it mysql /bin/bash
			
			20220628：mysql端口更换为：13306端口
		2.20.2
			旧版的，幼儿园考勤管理（2017-2018年）
			http://edu.ibotn.com/kindkaoqin/index.html			
			
			ibotn edu项目使用的阿里云测试服务器
			120.78.254.91
			root   Qazxdr!@!*myeink
			mysql -h120.78.254.91 -uroot -pds#ibotn@2017myeink
	2.21 nacos
		启动地址：http://localhost:8848/
		{ibotn-auth.yml} 
			spring: 
			  redis:
				host: 47.112.198.102
				port: 9736
				password: redis!123
		2.21.2 要保证正常本地使用nacos访问
			配置列表中，所有redis及mysql数据库要么全部使用本地的。要么全部使用线上服务器上的。
			【否则无法使用】
		2.21.3 在浏览器输入: http://localhost:8848/nacos 用户名和密码 都是 nacos/nacos
	2.22 生成代码
		生成代码：http://47.112.198.102/login  账号 dev 密码 123456
		
	2.23 
		ip:120.76.190.47
	2.24 配置的接口文档
		http://47.112.198.102:8080/doc.html 登录模块相关接口API文档说明
	2.25 外网访问禅道
		http://km.ibotn.com:88
		
3. test code myeink2
	name and all price 8-8 = 0;=2-2=0；
	
4. 前端-小程序
	小程序端
	https://www.xiaopiu.com/h5/byId?type=project&id=5ef15313d564a944962d402d
	
	微信小程序登录code凭证接口API文档 
	 http://47.112.198.102:8899/doc.html#/default/%E7%99%BB%E5%BD%95%E7%AE%A1%E7%90%86/wxMiniAppLoginUsingPOST 

	微信小程序需要https协议的
	https://ibotn.itway.top
	
	4.3 小程序端需求修订记录：
		https://xiaopiu.com/prd/5ef15313d564a944962d402d
	4.4 手机app，家庭版，新ui:
		https://www.xiaopiu.com/h5/byId?type=project&id=5c933748deb42e757f28b4c6
			
		小i书童app视觉稿地址：https://js.design/f/buC2U8?p=B9jqI2BpKT
		
5.前端-电脑端
	PC端原型稿地址:
	https://www.xiaopiu.com/web/byId?type=project&id=5ef1535ad564a944962d4047
	
	5.2 设计稿
		小程序设计稿：https://js.design/f/JdYkR5?p=wxhbvo_WVB
		
		PC端设计稿：https://js.design/f/SPe765?p=QsOJfBVmt4
	5.3 PC端导入导出说明
		https://docs.qq.com/sheet/DZHBTellTbXZVZlps
		
		【腾讯文档】PC端导入导出说明
		https://docs.qq.com/sheet/DZHBTellTbXZVZlps?tab=BB08J2
6. 幼儿园管理系统开发进度
	https://docs.qq.com/sheet/DQmVJSEtOS3hVekVm
	
7. 解决org.apache.ibatis.binding.BindingException: Invalid bound statement (not found)问题
	https://blog.csdn.net/qq_39997939/article/details/122279782
	
	解决办法：{
	本项目下的ibotn-child.yml修改如下：
		mybatis:
		# 搜索指定包别名
		typeAliasesPackage: com.ibotn.child.**.domain
		# 配置mapper的扫描，找到所有的mapper.xml映射文件
		mapperLocations: classpath:mapper/**/*.xml
	}
	
8. 实体bean中有很多属性，但查询的时候，只使用一部分属性。
	单独抽出实体类（请求体），只供查询用，方便前端查看这些。
	
9.后勤管理-厨房-食谱
	
	分析：以下字段无需前端上传，后端根据登录用户保存的信息自行赋值。
	发布人，发布人id(发布人id,预留字段（登录返回的用户id,获取发布人头像等信息）),园所id。
	
	用户id通过{com.ibotn.common.security.utils.SecurityUtils#getUserId}获取不到
		使用{com.ibotn.common.security.utils.SecurityUtils#getLoginUser}来获取。
		
	0和null的处理。Long。
	0不同于null
	
	列表倒叙排列
		按照日期字段。
	新增时，日期字段
	startTime="Invalid Date"。后台报错。【后台进行日期格式校验】【或者前端处理】
	{代码：
		@Pattern(regexp = "\\d{4}(\\-|\\/|.)\\d{1,2}\\1\\d{1,2}",message = "日期格式不正确")
		@JsonFormat(pattern = "yyyy-MM-dd")
		@Excel(name = "食谱开始时间", width = 30, dateFormat = "yyyy-MM-dd")
		private Date startTime;
	}
	{报错：	
		HV000030: No validator could be found for constraint 'javax.validation.constraints.Pattern' validating type 'java.util.Date'.
	}
	{参考：
		No validator could be found for constraint ‘javax.validation.constraints.Pattern‘ validating type ‘j
		https://blog.csdn.net/wangxuelei036/article/details/107079783/	
		
		原因是：Pattern只能用于String类型。
	}
	
	查询食谱，按照月份查询。而日历中，每一个月份的7天星期是不固定的。此时只需要判断月份即可。
	
	9.10 查询食谱异常；
		通过接口文档查看正常。通过前端ui访问时异常。
		{
			### Error querying database. Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') AS t1 LEFT JOIN ( SELECT * FROM i_user_relation AS ty ' at line 20 
			### The error may exist in file [D:\workspace\web-server\ibotn-cloud\ibotn-modules\ibotn-child\target\classes\mapper\logistics\LogisticsRecipeMapper.xml] 
			### The error may involve com.ibotn.child.logistics.mapper.LogisticsRecipeMapper.selectLogisticsRecipeList-Inline ### The error occurred while setting parameters
			### SQL: select count(0) from ( /*含扩展信息的列表*/ select t1.recipe_id, t2.relation_name as publishBy,/*发布人使用关联表获取*/ t1.publish_id, t1.dept_id, t1.publish_date, t1.recipe_attach, t1.start_time, t1.end_time, t1.create_by, t1.create_time, t1.update_by, t1.update_time ,t2.avatar FROM ( SELECT * FROM i_logistics_recipe AS tx WHERE /*查询食谱，按照月份查询。而日历中，每一个月份的7天星期是不固定的。此时只需要判断月份即可。*/ ) AS t1 LEFT JOIN ( SELECT * FROM i_user_relation AS ty ) AS t2 ON t1.publish_id = t2.user_id ORDER BY t1.publish_date DESC ) tmp_count 
			### Cause: java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') AS t1 LEFT JOIN ( SELECT * FROM i_user_relation AS ty ' at line 20 ; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ') AS t1 LEFT JOIN ( SELECT * FROM i_user_relation AS ty ' at line 20
		
		}
		{验证对比分析：
			是idea注释/**/问题。全部换成<!-- -->
			/*查询食谱，按照月份查询。而日历中，每一个月份的7天星期是不固定的。此时只需要判断月份即可。*/
			
			idea在代码警告区域生成的注释块为： /* */  。该方式在sql内部，会有异常。
			idea在代码正常区域生成的注释块为： <!-- -->。该方式在sql内部，一切正常
		}
10,注册登录模块
	10.1 验证码，1111，测试模式下模拟使用，修改对应代码即可。