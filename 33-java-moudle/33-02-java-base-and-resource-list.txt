0 资源
	0.0 国内镜像网站
		https://mirrors.tuna.tsinghua.edu.cn/ 
		https://mirrors.ustc.edu.cn/ 
	0.1 jar 
		https://www.findjar.com/
		
		https://mvnrepository.com/
			{包含多个仓库入口}
		
		{阿里云mvn仓库
			https://developer.aliyun.com/mvn/guide
			[含新旧源。以及原始仓库地址。]
		}		
		{
			http://www.mvnrepository.com/

			http://mvnrepository.com/

			http://findjar.com

			http://sourceforge.net/

			原文 ：https://blog.csdn.net/weixin_44977185/article/details/97820773
		}
	0.2 jdk download:
		jdk1.6 download address
		https://www.oracle.com/java/technologies/javase-java-archive-javase6-downloads.html#jdk-6u25-oth-JPR 
		jdk7：
		http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html
		
		0.2.3 java jdk 目录_深入浅出 Java JDK 安装目录及其子目录含义 10分钟详解 - 精简归纳...
			https://blog.csdn.net/weixin_30531707/article/details/114429262
			https://blog.51cto.com/u_15127607/3268280
		
	0.3 android官方文档
		https://developer.android.google.cn/training/camera/photobasics?hl=zh-cn
	0.4 java教程
		菜鸟教程：
		https://www.runoob.com/java/java-tutorial.html
		
		0.4.2 在线工具，在线运行代码
			https://www.runoob.com/try/runcode.php?filename=HelloWorld&type=java
	0.5 java.lang.Object#wait(long);
		doc ref:
		For more information on this topic, see Section 3.2.3 in Doug Lea's
		"Concurrent Programming in Java (Second Edition)" (Addison-Wesley,
		 2000), or Item 50 in Joshua Bloch's "Effective Java Programming
		Language Guide" (Addison-Wesley, 2001).
	0.6 《Java Concurrency in Practice》
	0.7 Java Documentation
			https://docs.oracle.com/en/java/ 
		a,api doc online:
			https://docs.oracle.com/en/java/javase/index.html 
			
			1.7:
			https://docs.oracle.com/javase/7/docs/api/ 
			
			1.5:
			https://docs.oracle.com/javase/1.5.0/docs/api/
		b,
			https://www.elastic.co/guide/en/elasticsearch/client/java-api/5.5/index.html
	0.8 使用Java API的5个技巧
		https://blog.csdn.net/qq_37267015/article/details/78770860 
	0.9 openjdk
		http://openjdk.java.net/install/
		
		OpenJDK6,7,8,9,10,11下载链接 
		【源码】
		https://blog.csdn.net/qq_23091073/article/details/83178848? 
		
		OpenJDK各平台版本下载
		https://blog.csdn.net/lwqldsyzx/article/details/108023451 
		【openjdk 1.8及以上版本】
		https://mirrors.tuna.tsinghua.edu.cn/AdoptOpenJDK/ 
		
		可用的下载网站
		http://hg.openjdk.java.net/jdk7/modules/jdk/
	0.10 JAVA JDK源码在线阅读
		https://github.com/daiqingliang/java_jdk1.8.0_111 
		在提供一个rt.jar包源码的地址（JDK源码中用了很多rt.jar中的类，例如sun.misc.Unsafe类，都包含在rt.jar中）：
		https://github.com/daiqingliang/rt-source.git
	0.11 JAVA架构师严选课互联网架构/分布式/高并发/微服务【图灵课堂】
		https://ke.qq.com/course/230866?taid=12461388048074194?
	0.12 项目源码下载
		淘源码：
		http://www.taoydm.com/#/CodeIndex/
	0.13 github搜java
		[很多资源]
		https://github.com/search?q=java&type=Repositories
一、java书籍、资料、吃透java ,csdn博客。
	1.0 Java电子书集合(200多本，史上最全，包含下载地址)
		https://zhuanlan.zhihu.com/p/474433404
		{地址：https://pan.baidu.com/s/1CbG0xZx7k7yG_PfbbIuOQQ

		提取码：m4yn}
	1.1、吃透Java基础八：Throwable异常 
		https://blog.csdn.net/u013277209/article/details/102834719
		
		1.1.2 javaeye,iteye
	1.2 java专业书籍，
		java专业书籍，
		《java 并发编程的艺术》
			--求百度网盘云资源
			--《Java并发编程的艺术》epub下载在线阅读，求百度网盘云资源
				https://zhidao.baidu.com/question/761484877862324164.html
				：https://pan.baidu.com/s/1WUZl6mu4QtMdtaO0Et17gA
				提取码: 37t6
			
		，《Effective Java》
		，《Java并发编程实践》
		,《Java Puzzlers》
		Java TCP_IP Socket编程(原书第2版)[Android平台开发]
			
	1.3 java nio书籍
		java nio书籍_《Java NIO》这本书
		-->https://blog.csdn.net/weixin_39914868/article/details/114037710
		--》Ron Hitchens著的 《Java NIO》
	
二、从ReentrantLock的实现看AQS的原理及应用 
	https://tech.meituan.com/2019/12/05/aqs-theory-and-apply.html
	
3. JDK、JRE、JVM三者间的关系 
	3.1 JDK、JRE、JVM三者间的关系 
		https://www.cnblogs.com/iskandar/p/8933340.html
		
4. 对象与字符串互转。
	4.1 对象与字符串互转 异常。
		List<RemoteTtsBean> mList;
			mList = (ArrayList<RemoteTtsBean>)ObjectConvertUtils.string2Object(strList);
		
			System.err: java.io.StreamCorruptedException: invalid stream header: EFBFBDEF
			System.err:     at java.io.ObjectInputStream.readStreamHeader(ObjectInputStream.java:808)
			System.err:     at java.io.ObjectInputStream.<init>(ObjectInputStream.java:301)
		
		4.1.1 java.io.StreamCorruptedException: invalid stream header: 异常
			https://blog.csdn.net/T_NULL/article/details/78474786?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase
			
		4.2.2 java.io.StreamCorruptedException: invalid stream header报错原因 
			https://blog.csdn.net/wangwenjunsw/article/details/5550441?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase
	4.2 String.split()遇到空字符串的几种情况 
		https://blog.csdn.net/qqxyy99/article/details/78861109 
5.java中线程
	该模块独立到【33-08-java-thread-module.txt】
6. java中文件操作
	6.1 java读取文本文件内容 
		https://www.cnblogs.com/xing-star/p/11042369.html 
		
7. Java生成和操作Excel文件
	7.1 Java生成和操作Excel文件 
		https://www.cnblogs.com/mingforyou/p/3282922.html 
8 java对json处理的常用jar包
	https://www.cnblogs.com/liyuanhong/articles/13680631.html 
	
	Java中并没有内置JSON的解析，因此使用JSON需要借助第三方类库。

	Gson：https://github.com/google/gson  【谷歌开发的 JSON 库，功能十分全面】
	FastJson：https://github.com/alibaba/fastjson  【阿里巴巴开发的 JSON 库，性能十分优秀】
	Jackson：https://github.com/FasterXML/jackson  【社区十分活跃且更新速度很快】
	
9. java中的this::
	https://blog.csdn.net/weixin_33875839/article/details/92415798 
	
10. Java8新特性
	10.0 	https://www.runoob.com/java/java8-new-features.html
	10.1 Java Lambda 表达式
		https://www.runoob.com/java/java8-lambda-expressions.html 
		
		https://blog.csdn.net/weixin_37766087/article/details/94999833 
		
		10.1.1 Java-Function接口函数使用
			https://blog.csdn.net/qq_37465368/article/details/83862469 
11. java 泛型
	11.1 https://www.runoob.com/java/java-generics.html 

	11.2 java泛型中使用T,E等的区别
		https://blog.csdn.net/chenlycly/article/details/25561029 
		
		E - Element (在集合中使用，因为集合中存放的是元素)
		 T - Type（Java 类）
		 K - Key（键）
		 V - Value（值）
		 N - Number（数值类型）
		？ -  表示不确定的java类型 
		：：这几个本质上没什么区别，只不过是一个约定好的代码，也就是说 使用大写字母A,B,C,D......X,Y,Z定义的，就都是泛型，把T换成A也一样，这里T只是名字上的意义而已
12 java注解-最通俗易懂的讲解
	https://blog.csdn.net/qq1404510094/article/details/80577555 
	原文：https://www.cnblogs.com/Tanyboye/p/9138412.html 
13 enum
	13.1
	13.2 Java中自定义枚举（Enum）项的值,可设置为指定的值
		https://blog.csdn.net/funnyfu0101/article/details/53366359 
		
		参考：okhttp3.Protocol
14 Java中break retry，continue retry的使用
	https://blog.csdn.net/zzti_erlie/article/details/90728898 
	
15 进制
	15.1 二进制
		两个负数的二进制补码是怎么相加的？
		http://bbs.bccn.net/thread-372226-1-1.html 
16 Java 代码中看到数字中间带下划线的，如 1000_000 这种形式的数字的理解
	https://blog.csdn.net/coderder/article/details/84030703 
	
17 Java中Volatile关键字详解
	https://www.cnblogs.com/zhengbin/p/5654805.html 
	
18 DiskLruCache
	18.1 ref:okhttp3.internal.cache.DiskLruCache 
19 反射
	16.1 clazz.getDeclaredMethods()
		测试用例验证：不包含继承方法
		clazz.getMethods()
		包含继承方法。
		
		均不包含，构造函数。
20 Exception
	20.1 Java异常（异常体系 、try catch finally 、Exception ) Exception和RuntimeException区别 
		https://blog.csdn.net/sophia__yu/article/details/83586487 
21 正则表达式
	21.1 日期正则表达式
		java yyyy-mm-dd正则表达式_匹配yyyy-mm-dd日期格式的的正则表达式
		https://blog.csdn.net/weixin_29047545/article/details/114098981?
		https://blog.csdn.net/weixin_36140400/article/details/114565937
		
		21.1.3 java 时间正则表达式
			https://www.cnblogs.com/hellonotebook/p/12516315.html
			{
				//yyyy-MM-dd  yyyy/MM/dd yyyy.MM.dd yyyyMMdd
				String dateReg = "\\d{4}(\\-|\\/|.)\\d{1,2}\\1\\d{1,2}";

				//HH:mm:ss
				String timeReg1 = "([0-1]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$";

				//HH:mm
				String timeReg2 = "([0-1]?[0-9]|2[0-3]):([0-5][0-9])$";

				//yyyy-MM-dd HH:mm:ss
				String dateTimeReg1 ="\\d{4}(\\-|\\/|.)\\d{1,2}\\1\\d{1,2} ([0-1]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$";

				//yyyy-MM-dd HH:mm
				String dateTimeReg2 ="\\d{4}(\\-|\\/|.)\\d{1,2}\\1\\d{1,2} ([0-1]?[0-9]|2[0-3]):([0-5][0-9])$";
			}
22. java 不同对象 拷贝_java不同类型对象之间的拷贝
	https://blog.csdn.net/weixin_42299560/article/details/114243213
	
	commons的beanutils
	commons-beanutils-1.8.0
23. 命令行运行jar包的常见方式
	https://blog.csdn.net/First_____/article/details/121563870
	
	{java 命令行运行jar包的两种方式:
		第一种方式: 如果没有指定主函数的话,需要使用这种方式进行运行

		java -classpath xxxxx.jar 主函数全类名 <args>

		第二种方式:如果使用带有 主函数的打包方式,可以使用这种,较为简便,但还是推荐上面那一种方式

		java -jar xxxxx.jar <args>

		hadoop 命令行运行jar包的方式:
		hadoop jar xxxxx.jar 主函数全类名 <args>

		flink 命令函运行jar包的方式:
		flink run -c 全类名 -p 并行度的数量 xxxxx.jar <args>
		————————————————
		版权声明：本文为CSDN博主「First_____」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
		原文链接：https://blog.csdn.net/First_____/article/details/121563870
	}