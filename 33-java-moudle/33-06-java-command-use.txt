1.javap的使用
	https://www.cnblogs.com/baby123/p/10756614.html
	
		-help  --help  -?        输出此用法消息
		  -version                 版本信息
		  -v  -verbose             输出附加信息
		  -l                       输出行号和本地变量表
		  -public                  仅显示公共类和成员
		  -protected               显示受保护的/公共类和成员
		  -package                 显示程序包/受保护的/公共类
								   和成员 (默认)
		  -p  -private             显示所有类和成员
		  -c                       对代码进行反汇编
		  -s                       输出内部类型签名
		  -sysinfo                 显示正在处理的类的
								   系统信息 (路径, 大小, 日期, MD5 散列)
		  -constants               显示最终常量
		  -classpath <path>        指定查找用户类文件的位置
		  -cp <path>               指定查找用户类文件的位置
		  -bootclasspath <path>    覆盖引导类文件的位置
	1.1 javap 要在java文件对应生成的class文件所在包的最上层目录下执行。
2. javah，javac
	2.1 javah命令详解
		https://blog.csdn.net/tianshuai1111/article/details/7381407  
		javah命令主要用于在JNI开发的时，把java代码声明的JNI方法转化成C\C++头文件，以便进行JNI的C\C++端程序的开发。
		
		-classpath <path> Path from which to load classes
		  -bootclasspath <path> Path from which to load bootstrap classes
		  -d <dir> Output directory
		  -o <file> Output file (only one of -d or -o may be used)
		  -jni Generate JNI-style header file (default)
		  -version Print version information
		 -verbose Enable verbose output
		 -force Always write output files
		 
		 举例：
		 AndroidJavaDemoTestForAS\ndkBuildJni\src\main\java>javah -d jni com.example.ndkbuildjni.MyJni
		 
		 会创建jni目录，并生成.h文件。
	
		2.2.2  二，javac用法
			  javac 工具读取用 Java 编程语言编写的类和接口定义，并将它们编译成字节码类文件。