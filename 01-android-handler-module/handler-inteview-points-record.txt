一、消息分发机制

	这个考得非常常见。一定要看源码，代码不多。带着几个问题去看：

	1.为什么一个线程只有一个Looper、只有一个MessageQueue？

	2.如何获取当前线程的Looper？是怎么实现的？（理解ThreadLocal）

	3.是不是任何线程都可以实例化Handler？有没有什么约束条件？

	4.Looper.loop是一个死循环，拿不到需要处理的Message就会阻塞，那在UI线程中为什么不会导致ANR？

	5.Handler.sendMessageDelayed()怎么实现延迟的？结合Looper.loop()循环中，Message=messageQueue.next()和MessageQueue.enqueueMessage()分析。
	--------------------- 
	作者：huison_ma 
	来源：CSDN 
	原文：https://blog.csdn.net/qq_27053103/article/details/79564062 
	版权声明：本文为博主原创文章，转载请附上博文链接！
	
	**********************************************************************
	关于【第二类问题解答】,注意目前理解，有局限性，后续深入分析，继续完善。
	a1.1、
	
二、我的疑问记录

2.1、ActivityThread main运行在哪个线程中。
2.2、ActivityThread main与普通的java类的main区别？
2.3、普通的java类，就是主线程了，可以执行耗时操作，已验证线程休眠多久都没问题。
2.4、为啥子线程handler可以执行耗时操作？
2.5、主线程到底能不能执行长期耗时操作，还是安卓故意这样做，故意限制时长ANR
2.6、Android主线程到底是什么（一）
	https://blog.csdn.net/u011631275/article/details/47337385
2.7、anr,根据anr找到源码提示位置。
	（ANR：Application Not Responding）对话框
2.8、messageQueue存储结构是真正的队列吗？
	还是单链表结构存储？
	messageQueue源码深度剖析？
	2.8.2，引出问题，单链表是什么？
2.9、ThreadLocal原理。在Looper如何使用ThreadLocal的？
2.10、ThreadLocal使用的算法？
**********************************************************************
关于【第二类问题解答】,注意目前理解，有局限性，后续深入分析，继续完善。
a2.1、

三、handler使用。高级用法。
	3.1、Handler的正确使用,使用静态内部类+弱引用,解决内存泄漏，举例说明在使用ProgressBar时的Handler类的静态内部类实现。
		https://blog.csdn.net/qingxixiansheng/article/details/81381376
	











