0.1	
	https://github.com/wangzheng0822/algo 
	
	0.1.2使用的大文件资源放到阿里云对应目录下。
		resource
一、什么是 RPC 框架
1.https://blog.csdn.net/b1303110335/article/details/79557292
二、什么是代码时间复杂度，空间复杂度？
1.大O复杂度分析
三、性能几乎是开发过程中时刻都
要考虑的问题。一个简单的ArrayList、 Linked List的选择问题，就可能会产生成千上万倍的性能差别。这个时候，数据结构和算法的意义就完全凸显出来了。

08
	
	08.0 test pro:com.algorithm.stack.ArrayStackTest
		com.algorithm.stack.StackOfArray
	08.1 基于链表实现的链式栈的代码，你可以自己试着写一下。我会将我写好的代码放到Github上，你可以去看一下自己写的是否正确。
		b,均摊时间复杂度分析方法。
		
		c,课后思考
			1. 我们在讲栈的应用时，讲到用函数调用栈来保存临时变量，为什么函数调用要用“栈”来保存临时变量呢？用其他数据结构不行吗？
			2. 我们都知道， JVM内存管理中有个“堆栈”的概念。栈内存用来存储局部变量和方法调用，堆内存用来存储Java中的对象。那JVM里面的“栈”跟我们这里说
			的“栈”是不是一回事呢？如果不是，那它为什么又叫作“栈”呢？
			
			c3 jvm中的堆栈与数据结构中的堆栈
				https://blog.csdn.net/weixin_30952103/article/details/97729052 
			c4 课后思考评论。
	08.2 参考：数据结构与算法之美学习笔记：第八讲 
		https://www.icode9.com/content-1-550522.html 
09 队列：队列在线程池等有限资源池中的应用
	9.1 
		队列的应用也非常广泛，特别是一些具有某些额外特性的队列，比如循环队列、
		阻塞队列、并发队列。它们在很多偏底层系统、框架、中间件的开发中，起着关键性的作用。比如高性能队列Disruptor、 Linux环形缓存，都用到了循环并发队
		列； Java concurrent并发包利用ArrayBlockingQueue来实现公平锁等。
		
		
		实际上，基于数组的循环队列，利用CAS原子操作，可以实现非常高效的并发队列。这也是循环队列比链式队列应用更加广泛的原因。在实战篇
		讲Disruptor的时候，我会再详细讲并发队列的应用。
		
		解答开篇
			基于链表的实现方式，可以实现一个支持无限排队的无界队列（unbounded queue），但是可能会导致过多的请求排队等待，请求处理的响应时间过长。所以，针
			对响应时间比较敏感的系统，基于链表实现的无限排队的线程池是不合适的。
			可能会导致过多的请求排队等待#如何理解？
			
		课后思考
			1. 除了线程池这种池结构会用到队列排队请求，你还知道有哪些类似的池结构或者场景中会用到队列的排队请求呢？
			2. 今天讲到并发队列，关于如何实现无锁并发队列，网上有非常多的讨论。对这个问题，你怎么看呢？
18.散列表（上）：Word文档中的单词拼写检查功能是如何实现的？
19.散列表（中）：如何打造一个工业级水平的散列表？
	a,装载因子过大了怎么办？
		如果原来散列表的装载因子是0.8，那经过扩容之后，新散列表的装载因子就下降为原来的一半，变成了0.4
	b，装载因子会变吗？不是调用构造函数时传递的固定值吗？
22.哈希算法（下）：哈希算法在分布式系统中有哪些应用？
	应用七：分布式存储
	一致性哈希算法如何理解？
23.数据结构与算法之美学习笔记：第二十三讲 
	23.0 
		test project:com.algorithm.binarytree.FloorLevelTreeTest
	23.1 数据结构与算法之美学习笔记：第二十三讲 
		https://www.cnblogs.com/luoahong/p/11881209.html 
		
		a,课后思考题
			a1，给定一组数据，比如1，3，5，6，9，10，可以构建出多少种不同的二叉树？
				
			a2,我们讲了三种二叉树的遍历方式，前、中、后序。实际上，还有另外一种遍历方式，也就是按层遍历，你知道如何实现吗？
			解答参考：
				层序遍历，借用队列辅助即可，根节点先入队列，然后循环从队列中pop节点，将pop出来的节点的左子节点先入队列，右节点后入队列，依次循环，直到队列为空，遍历结束。
				code test:com.algorithm.binarytree.FloorLevelTreeTest
	23.4 数据结构与算法-基础算法篇-二叉树
		https://blog.csdn.net/z_yemu/article/details/106678716 
		
		3. 二叉查找树
		二叉查找树是二叉树中最常用的一种类型，也叫二叉搜索树。顾名思义，二叉查找树是为了实现快速查找而生的。不过，它不仅仅支持快速查找一个数据，还支持快速插入、删除一个数据。

		二叉查找树要求，在树中的任意一个节点，其左子树中的每个节点的值，都要小于这个节点的值，而右子树节点的值都大于这个节点的值
24 
	L的范围是[log2(n+1), log2n +1].
	n=8时，最多L=3-1=4层
	
	

	有重复数据的，写程序设计下？
	
	删除操作.
		child是啥？
		需要配合下面代码,pp的左右节点指向child
		if (pp == null) tree = child; //删除的是根节点
		else if (pp.left == p) pp.left = child;
		else pp.right = child;
	24.4.二叉查找树的其他操作	
		a,除了插入、删除、查找操作之外，二叉查找树中还可以支持快速地查找最大节点和最小节点、前驱节点和后继节点。
		自己实现。
		b，
		c,支持重复数据的二叉查找树
			举例中，插入值相同的节点18,位置不对吧？
			
		课后思考
		今天我讲了二叉树高度的理论分析方法，给出了粗略的数量级。如何通过编程，求出一棵给定二叉树的确切高度呢？
		
		node
		node.left node.right
		if(node.left != null) 
		
		if(node.right != null)
25 
	如何定义一棵“红黑树”？
	任何相邻的节点都不能同时为红色，也就是说，红色节点是被黑色节点隔开的。 #这句话对吗？与图不一样？[已解决。看下面一行说明]
	#一个节点的左右子节点，不可以谈相邻；只有二级子节点才可以谈是否相邻。
	
	课后思考：	动态数据结构支持动态地数据插入、删除、查找操作，除了红黑树，我们前面还学习过哪些呢？能对比一下各自的优势、劣势，以及应用场景吗？