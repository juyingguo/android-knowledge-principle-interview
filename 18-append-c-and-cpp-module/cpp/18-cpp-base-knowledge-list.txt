0，资源
	0.1 c++函数库查看网址
		C++有cplusplus.com和cppreference.com这两个标准参考网站。
		也可以查看c标准函数库
01 C++11/C++14新特性
	01.1 C++11/C++14新特性
		https://blog.csdn.net/aaron19890330/article/details/82898306
一、C++中：：的作用 
	
	1.1、https://blog.csdn.net/better_xiaoxuan/article/details/52957219
	
	1.2、c++中冒号（:）和双冒号（::）的用法 
		https://blog.csdn.net/zimingjushi/article/details/6549390
		
二、C++ struct也可以继承（转载的） 
	
	2.1、C++ struct也可以继承（转载的） 
		https://blog.csdn.net/luccao/article/details/84025777
		
三、C/C++中const关键字详解 
	
	3.1、C/C++中const关键字详解
		https://www.cnblogs.com/yc_sunniwell/archive/2010/07/14/1777416.html 
		
	3.2、C++ const修饰函数、函数参数、函数返回值 
		【破船不会沉】【c,c++,算法，数据结构】
		https://blog.csdn.net/my_mao/article/details/22872149
		
	3.3 C++中const关键字的使用总结 
		https://www.cnblogs.com/gklovexixi/p/5619647.html
		
	3.4 const_cast 作用及用法。
	
	  
		
四、C++中的静态绑定和动态绑定 
	4.1、C++中的静态绑定和动态绑定 
		https://www.cnblogs.com/lizhenghn/p/3657717.html
		
	4.2、 深入理解C++的动态绑定和静态绑定 
		https://blog.csdn.net/chgaowei/article/details/6427731
5. cpp泛型,template
	5.1 cpp泛型中的类型后跟*
	
	5.2. C++泛型基础 
		https://blog.csdn.net/github_34965845/article/details/80540013
		
	5.3 template 定义泛型类。
		该类中的模板函数所使用的泛型类型名称可以不同。没关系的。
		函数模板生命中的泛型名称与定义时所使用的的泛型名称必须一致。 
		
	5.4 android 源码强指针sp使用双模板定义拷贝构造函数。
		
	5.5 c++模板类构造函数怎麽写
		https://www.csdn.net/gather_2c/NtDagg4sMjgtYmxvZwO0O0OO0O0O.html

6. typedef vs #define
	6.1  typedef vs #define
		https://www.runoob.com/cprogramming/c-typedef.html
		
		#define 是 C 指令，用于为各种数据类型定义别名，与 typedef 类似，但是它们有以下几点不同：

		typedef 仅限于为类型定义符号名称，#define 不仅可以为类型定义别名，也能为数值定义别名，比如您可以定义 1 为 ONE。
		typedef 是由编译器执行解释的，#define 语句是由预编译器进行处理的。
7. inline

8. static 
	8.1 static_cast
		C/C++： C++ 中 static_cast 类型转换的含义 
		https://blog.csdn.net/zangle260/article/details/26740269 
		https://blog.csdn.net/moruihong/article/details/7712260
		
		C++-类型转换(static_cast, const_cast, reinterpret_cast)
		https://www.cnblogs.com/hyq-lst/p/12603716.html
		

		
9、cpp	[Error] 'numeric_limits' was not declared in this scope
	1.1、cpp	[Error] 'numeric_limits' was not declared in this scope
		https://stackoverflow.com/questions/20231259/error-numeric-limits-was-not-declared-in-this-scope
		
10、c++ 中三种继承方式。
	2.1、c++ 中三种继承方式。
		https://www.runoob.com/cplusplus/cpp-class-access-modifiers.html 
		
		如果继承时不显示声明是 private，protected，public 继承，则默认是 private 继承，在 struct 中默认 public 继承：
		
11. 初始化局部变量和全局变量 
	3.1、初始化局部变量和全局变量 
		https://www.runoob.com/cplusplus/cpp-variable-scope.html
		
		
		当局部变量被定义时，系统不会对其初始化，您必须自行对其初始化。定义全局变量时，系统会自动初始化为下列值：

		数据类型	初始化默认值
		int			0
		char		'\0'
		float		0
		double		0
		pointer		NULL
		正确地初始化变量是一个良好的编程习惯，否则有时候程序可能会产生意想不到的结果。
12、C++ inline 函数简介 
	4.1、C++ inline 函数简介 
		博主：：著述《c++进阶心法》
		https://blog.csdn.net/K346K346/article/details/52065524?depth_1-utm_source=distribute.pc_relevant.none-task&utm_source=distribute.pc_relevant.none-task
		
13. C++ struct
	5.1 C++struct里定义函数 
		https://blog.csdn.net/ucasliyang/article/details/52691619?depth_1-utm_source=distribute.pc_relevant.none-task&utm_source=distribute.pc_relevant.none-task
		
		c++中允许在结构体当中定义函数，它的用法和类的用法很像，不过与类有一个区别在于，struct中定义的函数和变量都是默认为public的，但class中的则是默认为private。
14. 虚函数virtual
	6.1 析构函数加上虚函数声明，因为需要删除，删除是可能通过基类进行删除。
		而构造函数是不需要加虚函数声明的，因为构造函数是直接调用的。
	