0 资源
	0.1 androidstudio官网下载。
		最新版下载
		https://developer.android.google.cn/studio#downloads
		存档历史版本下载
		https://developer.android.google.cn/studio/archive?hl=zh-cn
		androidstudio中文网站下载
		https://developer.android.google.cn/studio#downloads
		
		https://developer.android.google.cn/
		
		http://www.android-studio.org/
		
		0.1.4 android sdk
			
			a,存档文件下载：
				【只有很旧的几个版本】
				在[https://developer.android.google.cn/]搜索：sdk
				得到：https://developer.android.google.cn/sdk/older_releases?hl=en
				
			b，使用[Android Studio's SDK Manager.]下载
				这种方式下载的只是android sdk中的platforms部分。
				This is not the Android SDK itself. It's part of the Android SDK: Platform
			c,http://dl.google.com/android/android-sdk_r24.4.1-linux.tgz
				参考d中版本号参考无法使用类似的链接下载其它版本
			d，download-an-older-version-of-the-android-sdk
				https://stackoverflow.com/questions/27043522/where-can-i-download-an-older-version-of-the-android-sdk
				
				First check #{this link}# to find out what revision number you need. Then use one of these links:
				#{this link}#：https://developer.android.com/studio/releases/sdk-tools
				http://dl-ssl.google.com/android/repository/tools_r[rev]-windows.zip
				http://dl-ssl.google.com/android/repository/tools_r[rev]-linux.zip
				http://dl-ssl.google.com/android/repository/tools_r[rev]-macosx.zip

				Example for v21.1 for Windows:
				
				http://dl-ssl.google.com/android/repository/tools_r21.1-windows.zip
				#tools也就是基础android sdk包
				
				sdk使用：
				http://dl.google.com/android/android-sdk_r24.4.1-linux.tgz
				http://dl-ssl.google.com/android/repository/tools_r24.4.1-linux.zip

				You need to use the exact revision number as listed in the link above. Examples: 22, 22.0.1, etc...
				
				d2，SDL Readme :
					The Android SDK archive initially contains only the basic SDK tools. 
					提供基础功能，开发应用，仍需要通过[Android Studio's SDK Manager.]下载platform sdk
			e，ubuntu下配置sdk,ndk
				export ANDROID_HOME=/mnt/hgfs/vmshare/soft_tool/android-sdk-r24.4.1-linux
				export PATH=$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/cmdline-tools/tools/bin:$PATH
				export NDK_HOME=/mnt/hgfs/vmshare/soft_tool/android-ndk-r18b
				export PATH=$NDK_HOME:$PATH
		0.1.5 Command line tools
			https://www.mianshigee.com/tutorial/AndroidStudio/27802e2c788c4747.md
	0.2  as，sdk其它好用网站地址
	
		http://tools.android-studio.org/ 
	
		https://www.androiddevtools.cn/
		
		【以及很多好的资源】
		
	0.3 Android Gradle 插件版本说明
		https://developer.android.google.cn/studio/releases/gradle-plugin 
		
		包含项：【各个 Android Gradle 插件版本所需的 Gradle 版本】
	0.4 使用Android Studio来阅读Android源码
		mmm development/tools/idegen/
		mv ./out/target/product/tiny4412/obj/GYP/shared_intermediates/res.java ./out/target/product/tiny4412/obj/GYP/shared_intermediates/res.j
		sh ./development/tools/idegen/idegen.sh


		参考文章
		使用Android Studio查看Android Lollipop源码
		http://www.jianshu.com/p/c85984cf99e2?


		如何使用Android Studio开发/调试Android源码
		http://www.cnblogs.com/Lefter/p/4176991.html?
		
		使用Android Studio阅读整个Android源码
		https://blog.csdn.net/dj0379/article/details/45303509/? 
		https://blog.csdn.net/fengxingzhe001/article/details/78200446 
		
		使用AndroidStudio查看并调试Android源码
		https://blog.csdn.net/cfy137000/article/details/83718735? 
		
		b,但是我相信很多看源码的人是不需要编译的，所以只要一个idegen.jar:
			http://download.csdn.net/download/zoulu1/9436609 
			把这个文件copy到out/host/linux-x86/framework/目录下：
			1
			$ cp idegen.jar ../cyanogenmod/out/host/linux-x86/framework/idegen.jar 
			
			就可以执行命令：
			 . development/tools/idegen/idegen.sh 
		c,androidstudio idegen 在配置no libraries 的jdk时提示。
			Please specify a different SDK name
		0.4.3 Windows下使用android_studio查看android源码	
			https://www.jianshu.com/p/1ec01aedd5f7? 
		0.4.4 导入系统源码两种方式:Source Insight和Android Studio
			https://blog.csdn.net/haoxuhong/article/details/89351195? 
			
			a,				如果你是在VirtualBox中下载的系统源码，那么将VirtualBox中的系统源码拷贝到共享文件夹中，这样源码就会自动到Windows或者Mac上
			b,源码是在vmvare虚拟机ubuntu中创建的。
				在window下的androidstudio中查看源码。需要创建共享文件夹或使用samba
		0.4.5 
			导入源码前后占用磁盘空间对比。
			可以在windows 下的git bash下：
			$ df -h
			Filesystem                        Size  Used Avail Use% Mounted on
			D:/java2/git-client/git-2.32/Git  264G  241G   23G  92% /
			C:                                187G  165G   22G  89% /c
			F:                                4.6T  392G  4.2T   9% /f
			I:                                932G  683G  249G  74% /i
			Z:                                254G  171G   84G  68% /z

		0.4.6 导入 工程配置提示。
			Migrate Project to Gradle?
				This project does not use the Gradle build system. We recommend that you migrate to using the Gradle build system.
				More Information about migrating to Gradle
				[https://developer.android.com/studio/intro/migrate.html]
		0.4.7 可以在windows上，创建共享文件夹，aosp代码放入其中，供vmvare 下ubuntu编译。同时也可以用android studio和sourceinsight使用编辑。
		
		0.4.8 在源码的根目录下生成android.ipr和android.iml两个IntelliJ IDEA(AS是基于IntelliJ IDEA社区版开发的)的配置文件
			as打开对应目录下的ipr文件，就导入工程了。（如果将自动生成的android.ipr和android.iml放到aosp源码的其它目录，导入工程后，会有一些无法跳转的错误，实质是导入工程不完整或异常）
		0.4.9 
			AS在导入代码时比较慢，建议先修改android.iml，将自己用不到的代码exclude出去.可以仿照过滤.repo文件夹的语法,如:

			<excludeFolder url="file://$MODULE_DIR$/.repo" />
			<excludeFolder url="file://$MODULE_DIR$/abi" />
			<excludeFolder url="file://$MODULE_DIR$/art" />
		0.4.10 修改android.iml，可以去到暂时不要的jar，便于快速导入工程，如果后期需要查看，可以再次导入。
			
1. Android studio 将 Module 打包成 Jar 包,aar.
	1.1 Android studio 将 Module 打包成 Jar 包
		https://www.cnblogs.com/xinaixia/p/7660173.html
		
		1.1.1自定义生成 jar 包
			在 build.gradle 文件中加入如下代码： 方式一：
			在android节点外添加如下代码
			以WheelView为例。
			
			def _BASENAME = "WheelViewJar";
			def _VERSION = "_V1.3.4";
			def _DestinationPath = "build"; //生成jar包的位置
			//def zipFile = file('build/intermediates/bundles/default/classes.jar'); //待打包文件位置
			def zipFile = file('build/intermediates/packaged-classes/release/classes.jar'); //待打包文件位置,as3.5对应的目录，as版本不同可能会有所不同。根据实际情况添加即可。
			
			注意源jar不是这个目录下面的：build\intermediates\full_jar\debug\createFullJarDebug，编译出来的jar无法使用。其它项目导入该jar包时，无法解析BuildConfig.java
			
			task deleteBuild(type:Delete){
				delete _DestinationPath + _BASENAME + _VERSION + ".jar"
			}

			task makeJar(type:Jar){
				from zipTree(zipFile)
				from fileTree(dir:'src/main',includes:['assets/**']) //将assets目录打入jar包  
				baseName = _BASENAME + _VERSION
				destinationDir = file(_DestinationPath)
			}

			makeJar.dependsOn(deleteBuild, build)
	1.2 Android Studio 编译release的aar、jar包。【好用】
		https://blog.csdn.net/wenwins/article/details/80388361
		
		在 build.gradle 文件中加入如下代码： 方式一：
			在android节点外添加如下代码
			以WheelView为例。
		
		//自定义生成 jar 包
		//task to delete the old jar
		task deleteOldJar(type: Delete) {
			delete 'release/WheelViewJar_V1.3.4.jar'
		}
		//task to export contents as jar
		task makeJar(type: Copy) {
			delete 'release/WheelViewJar_V1.3.4.jar' //删除之前的旧jar包
			from('build/intermediates/packaged-classes/release/') //从这个目录下取出默认jar包
			into('release/') //将jar包输出到指定目录下
			include('classes.jar')
			rename('classes.jar', 'WheelViewJar_V1.3.4.jar') //自定义jar包的名字
		}
		makeJar.dependsOn(build)
		
		点击右边的Gradle侧边栏：makeJar ,或者exportJar
	1.3 ANDROID STUDIO 生成AAR和引用AAR 
		https://www.cnblogs.com/androidxiaoyang/p/5473916.html  
2. Android Studio：unsupported class file version 52.0报错
	2.1 Android Studio：unsupported class file version 52.0报错
		https://blog.csdn.net/u011435933/article/details/80923285?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase
3. 	ERROR: Jack is required to support java 8 language features. Either enable Jack or remove sourceCompatibility JavaVersion.VERSION_1_8.
	Affected Modules:
	
	https://blog.csdn.net/u011781521/article/details/52702482
	
		在build.gradle文件的defaultConfig中添加一下就可以了..

		android节点下defaultConfig节点下添加：
		jackOptions {
			enabled true
		}
		
		-source 1.7 中不支持 lambda 表达式
	
	3.2 指定sourceCompatibility中java版本
		子module下build.gradle中android节点下配置
			compileOptions {
				sourceCompatibility JavaVersion.VERSION_1_7
				targetCompatibility JavaVersion.VERSION_1_7
			}
4. Android Studio的TODO，FIXME 
	4.1 Android Studio的TODO，FIXME 
		https://blog.csdn.net/kaoshibuguaa/article/details/51536992 
		
5. 添加签名文件。
	5.1 as3.5添加签名文件异常。
		老版本是不会报错的。
		
		Key was created with errors:

		Warning:
		JKS 密钥库使用专用格式。建议使用 "keytool -importkeystore -srckeystore D:\juying\as1_5project\sp\AndroidJavaDemoTestForAS\sign\signature.jks -destkeystore D:\juying\as1_5project\sp\AndroidJavaDemoTestForAS\sign\signature.jks -deststoretype pkcs12" 迁移到行业标准格式 PKCS12。
		
		
		解决方法参考：
			Android APK签名 JKS 密钥库使用专用格式。建议使用 “keytool -importkeystore -srckeystore E:\xxxxxx- pkcs12“ 迁移到行业标准格式		
			https://blog.csdn.net/xkai007/article/details/106073091
			
			直接在androidstudio控制台中，输入：
			
				keytool -genkey -alias signature -keypass 123456 -keyalg RSA -keysize 2048 -validity 36500 -keystore D:\juying\as1_5project\sp\AndroidJavaDemoTestForAS\sign\signature.keystore  -storepass 123456
				回车后，需要继续按照提示输入相关信息，依次填写好信息后，输入 Y 确认信息即可。
			
			查看密钥详细输出信息：
				keytool -list -v -keystore D:\juying\as1_5project\sp\AndroidJavaDemoTestForAS\sign\signature.keystore 
		
6. Android Studio向项目添加C/C++原生代码教程 
	https://www.cnblogs.com/lsdb/p/9337285.html
	
7. 编译release or debug  apk失败。
	7.1 
		Caused by: com.android.builder.internal.aapt.v2.Aapt2Exception: AAPT2 error: check logs for details
		at com.android.builder.png.AaptProcess$NotifierProcessOutput.handleOutput(AaptProcess.java:443)
		at com.android.builder.png.AaptProcess$NotifierProcessOutput.err(AaptProcess.java:395)
		at com.android.builder.png.AaptProcess$ProcessOutputFacade.err(AaptProcess.java:312)
		at com.android.utils.GrabProcessOutput$1.run(GrabProcessOutput.java:104)
			
		解决过程参考：
		https://blog.csdn.net/zhouzhangfu/article/details/84789908
			构建 App 的时候，打开 Build 窗口，点击 “Toggle View” 切换到文本输出。
			在这种视图下，可以看清楚 gradle 的执行输出。如【7.2】错误详情。
	7.2
		mipmap-hdpi\katong01_200_300.png: error: failed to read PNG signature: file does not start with PNG signature.
	
		解决过程参考：
			https://blog.csdn.net/qiushisoftware/article/details/92763069		
			选中图片-右键-打开方式-画图，打开后另存为，选择png格式，删除项目中旧的logo并将最新的logo图片拷贝到项目中。

		重新打包，打包成功。
	7.3 使用或覆盖了已过时的 API。
		注: 某些输入文件使用了未经检查或不安全的操作。
		请使用 -Xlint:deprecation 重新编译。
		请使用 -Xlint:unchecked 重新编译。
	
	7.4 编译release成功
		编译debug失败
		AGPBI: {"kind":"error","text":"UNEXPECTED TOP-LEVEL ERROR:","sources":[{}]}
		AGPBI: {"kind":"error","text":"\tat com.android.dx.command.Main.main(Main.java:106)","sources":[{}]}
		:transformClassesWithDexForDebug FAILED
		
		参考博客：https://blog.csdn.net/qq_29984105/article/details/100514691
			最后删除掉
			C:\Users\***\.gradle\caches \ transforms-1

			才解决
8. android studio 编译处理的apk，在设备上运行后报：couldn't find "libxxxx.so"的错误解决办法
	https://blog.csdn.net/qq_41063141/article/details/86546113
	
	4.
		如果将so库文件其放在了libs下，则需要做如下配置：

		sourceSets { main { jniLibs.srcDirs = ['libs'] } }
9. android studio external tool 自定义工具
	9.1 javah
10 Android studio使用增量更新进行版本升级
	10.1 
		https://www.cnblogs.com/xiaoyang2009/p/5258380.html
	
		Current Version:3.4.2(build 183.6156.11.34.5692245)
		upgrade to 3.5.2(build 191.8026.42.35.5977832)

		windows 
		https://dl.google.com/android/studio/patches/AI-183.6156.11.34.5692245-191.8026.42.35.5977832-patch-win.jar	  
		（直接将这个地址复制了粘贴到浏览器就可以直接下载）
		
		下载完成后，将下载的.jar包放到Android studio的根目录，然后在命令行(Windows平台)或终端(linux，mac

		平台)执行下面命令进行安装：

		  java -classpath AI-183.6156.11.34.5692245-191.8026.42.35.5977832-patch-win.jar com.intellij.updater.Runner install .

		（记住最后面有个点，意思是将这个文件解压安装到当前目录）。
	10.2 
		Android Studio增量包升级方法
		https://blog.csdn.net/qq_28535319/article/details/99544768 
		
		参考这篇博客，解决问题了问题（3）。也正是博客中错误总结。
		
		下载后的安装包不要放在Android studio的安装目录，你可以随便放在一个文件夹，当然文件夹名英文不要有特殊字符，比如你放在了d盘update目录
		
		比如上面两个文件我都改了，因为为了可以增加as的运行速度，那有两个简单方法
		（1） 你以前改这两个文件的时候你备份了文件，你直接把改之前的文件替换改的文件（我就没备份）
		（2） 你把你版本的as再安装一次，在一个没用的文件夹中，然后把新安装目录中的文件复制过来替换
		（3）如果出现得错误列表中存在很多java jdk jre之类得不能更新，那应该是因为你选择的jdk jre目录是android studio内部文件路径得，这时你需要把jdk路径改成你自己环境变量配置中得，如果没配置（应该不会）那你需要去安装并配置，因为更新需要调用jdk工具，内置得会有冲突，不能自己更新自己
		ok了更新后，用起来真香。
11 NDK version is UNKNOWN
	cmake 工程同步失败，编译失败，配置了ndk,但提示未知
	NDK Resolution Outcome: Project settings: Gradle model version=4.4, NDK version is UNKNOWN
	
12 Android Studio 中的 CMake使用
	12.1 Android Studio 中的 CMakemessage打印日志以及输出位置
		https://blog.csdn.net/wq892373445/article/details/105013054 
		一、CMake 命令 message
			CMake 如果要像用户展示消息需要可以使用 message() API，类似与 Android 中的 Log 输出。

			message([<mode>] "message to display" ...)
			
			关键字，可以指定消息的类型：
			(none)         = 重要消息
			STATUS         = 附带消息
			WARNING        = CMake警告，继续处理
			AUTHOR_WARNING = CMake警告（dev），继续处理
			SEND_ERROR     = CMake错误，继续处理，但跳过生成
			FATAL_ERROR    = CMake错误，停止处理和生成
			DEPRECATION    = 如果分别启用了变量CMAKE_ERROR_DEPRECATED或CMAKE_WARN_DEPRECATED，则CMake弃用错误或警告，否则无消息
		二、点击as中右侧gradle，项目-module-Tasks-build-build执行即可。
		三、输出内容 CMake 会保存到文本中
			*\project\module-app\.cxx\cmake\debug\arm64-v8a\build_output.txt
	12.2 CMake was unable to find a build program corresponding to "Ninja"
		CMake Error: CMake was unable to find a build program corresponding to "Ninja".  CMAKE_MAKE_PROGRAM is not set.  You probably need to select a different build tool.
		
		https://blog.csdn.net/qq_15653601/article/details/88370856 
		博主方案：事实上是需要在环境变量中Path路径上添加上上图的cmake的bin目录，重启下AS或者IDEA（否则可能还是找不到），重新编译即可
		
		12.3.2 参考正常正常使用cmake的编译的工程MyJni
			gradle插件：gradle:3.5.2
			gradle版本：gradle:5.4.1 
			cmake:3.10
			androidstudio:3.5.2 
			
			将报错的工程采用MyJni一致版本配置。
			此时cmake编译日志可以正常打印了。【CMake was unable to find a build program corresponding to "Ninja"】错误不再提示。
13 Android Studio3.6设置Gradle Offline Mode的方法 
	android studio3.5以及之前的版本,设置方法：Settings-Build,Execution,Deployment.
	3.6 之后同样的位置已找不到Offline的设置选项了。
	View > Tool Windows > Gradle 
	
14 androidstudio 使用gradle中仓库地址配置。
	
	14.1 下载https://maven.google.com/**/support-annotations-25.4.0.jar  
		提示Connection timed out。
		
		更改仓库：顶级gradle文件
		buildscript {
			repositories {
				jcenter()
				maven {
					url 'https://maven.google.com/'
					name 'Google'
				}
			}
		}

		allprojects {
			repositories {
					jcenter()
					maven {
						url 'https://maven.google.com/'
						name 'Google'
					}
			}
		}
		
		内容全部更换为：
			buildscript {
			repositories {
				google()
				jcenter()
				mavenCentral()

			}
		}

		allprojects {
			repositories {
				google()
				jcenter()
				maven { url 'https://jitpack.io' }
			}
		}
		
		maven仓库，阿里云镜像地址1：
			maven { url 'https://maven.aliyun.com/repository/google' }
			maven{ url 'http://maven.aliyun.com/nexus/content/repositories/jcenter'}
			maven { url 'https://jitpack.io' }
			
			镜像地址2：
			maven {url "https://maven.aliyun.com/repository/public"}
			maven {url "https://maven.aliyun.com/repository/google"}
			google()
	14.2 JitPack的使用
		https://blog.csdn.net/ABestRookie/article/details/118926021
		#参考资料:

			https://blog.csdn.net/user11223344abc/article/details/78403537

			https://www.jianshu.com/p/1599a2d363d5
		#JitPack官网
			https://www.jitpack.io/
		#官网文档
			https://jitpack.io/docs/
			
		注意：输入仓库地址（可以现在github等上先找到地址。）
	14.3 JCenter 服务更新
	
		https://jfrog.com/
		
		
		https://developer.android.google.cn/studio/build/jcenter-migration
		
		公告：
		https://jfrog.com/blog/into-the-sunset-bintray-jcenter-gocenter-and-chartcenter/
		
		
		在 JCenter 上发布工件的开发者应该将其软件包迁移到新的托管服务，如 Maven Central
			https://maven.apache.org/repository/index.html
			
		Jcenter服务即将关闭，改用mavenCentral
			https://zhuanlan.zhihu.com/p/363156372
			{原有的变为只读，可以下载。}
15 Project needs to be converted to androidx.* dependencies 
	15.1 Android解决Project needs to be converted to androidx.* dependencies问题
		https://blog.csdn.net/weixin_40420578/article/details/100582094 
		https://blog.csdn.net/mqdxiaoxiao/article/details/108264547
		
		方法一：把整个项目升级到AndroidX,可参考我的另外一篇博客：https://blog.csdn.net/weixin_40420578/article/details/100132061

		android.useAndroidX=true
		android.enableJetifier=true
	

16 使用Androidstudio编译AIDL

	16.1 使用Androidstudio编译AIDL时，出现Process 'command 'D:\SDK\build-tools\27.0.3\aidl.exe'' finished with non-zero exit value 1的错误； 
		https://blog.csdn.net/ezconn/article/details/87953991 
		有多种情况。
		我遇到的其中一个错误：aidl文件中导入其它aidl类的包名不正确
17 Android Studio中怎么使用DDMS工具
	17.1 Android Studio中怎么使用DDMS工具  
		as3.0以下的版本适用：
		https://www.cnblogs.com/zhichao123/p/11794491.html 
	17.AndroidStudio 3.0中之后无法打开DDMS [Android Device Monitor] 问题
		https://www.cnblogs.com/it-tsz/p/10810669.html 
		
		Dos命令
		其实在上面的批处理文件中真正打开DMMS的是最后一行命令，当然也可以把这行命令在命令窗口执行同样可以打开DDMS；

		（1）打开Window命令窗口 ：Win+R快捷键–>CMD–>Enter；复制命令： 
		call D:\*\AndroidSDK\tools\monitor.bat，然后回车执行，坐等1到3秒就会打开DDMS；

		（2）在AndroidStudio中底部Terminal中输入： 
		call D:\*\AndroidSDK\tools\monitor.bat，然后回车执行，坐等1到3秒就会打开DDMS；
	18 查看native进程。
	
18 androidstudio编译apk,安装apk到手机失败
	Installation did not succeed. The application could not be installed: INSTALL_FAILED_USER_RESTRICTED
	https://blog.csdn.net/qq_43598138/article/details/104091976 
	
	18.2 安装apk时出现错误Failure [INSTALL_FAILED_DEXOPT]问题解决的方法
		https://www.codeprj.com/blog/45c2871.html
		
	18.3 指定名称生成apk.
		a,ERROR: Cannot set the value of read-only property 'outputFile' for ApkVariantOutputImpl_Decorated
			https://www.cnblogs.com/tangZH/p/10764568.html 
			转载请标明出处：https://www.cnblogs.com/tangZH/p/10764568.html
			
			Cannot set the value of read-only property 'outputFile' for ApkVariantOutputImpl_Decorated{apkData=Main{type=MAIN, fullName=debug, filters=[]}} of type com.android.build.gradle.internal.api.ApkVariantOutputImpl.
			这个在低版本的gradle是行得通的，但是高版本就不行。
			
			buildTypes {
				release {
					minifyEnabled false
					proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
					outFileFormat(defaultConfig,"release")
				}
			}
			def releaseTime() {
				return new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC"))
			}
			def outFileFormat(defaultConfig, str) {
				// 自定义APK安装包名
				android.applicationVariants.all { variant ->
					variant.outputs.all { output ->
						def outputFile = output.outputFile
						if (outputFile != null && outputFile.name.endsWith('.apk')) {
							def path = "../" + str + "/";
							def fileName = "IbotnCamera2_${str}_V${defaultConfig.versionName}_${releaseTime()}.apk";
							outputFileName = new File(path, fileName)
						}
					}
				}
			}
		
		a2.
			WARNING: API 'variantOutput.getPackageApplication()' is obsolete and has been replaced with 'variant.getPackageApplicationProvider()'.
			It will be removed at the end of 2019.
			For more information, see https://d.android.com/r/tools/task-configuration-avoidance.
			To determine what is calling variantOutput.getPackageApplication(), use -Pandroid.debug.obsoleteApi=true on the command line to display more information.
	
			参考：
			https://www.jianshu.com/p/70ce6017f5f7
			https://blog.csdn.net/beita08/article/details/95768251
			
			/**
			 * gradle高版本用，如：5.4.1及以上
			 */
			def outFileFormat(defaultConfig, str) {
				// 自定义APK安装包名
				android.applicationVariants.all { variant ->
					variant.outputs.all { output ->
						outputFileName = "ibotnLauncher_${variant.buildType.name}_V${defaultConfig.versionName}_${releaseTime()}.apk"
					}
				}
			}


19 avd
	19.1 android avd设置graphic automatic hardware software gles
		当设置为automatic启动模拟器失败。
	19.2 利用Android Studio自带的模拟器联网
		https://blog.csdn.net/qq_36157085/article/details/86595442?
		https://blog.csdn.net/weixin_42306122/article/details/82563925?
		
		a,Android Studio自带的模拟器本身默认是不能上网的，因为默认DNS为10.0.2.3，使用这个DNS是不能上网的
		b,进入到cmd后，需要输入adb root 将模拟器root一下，才能更改DNS
		c,
			接下来输入getprop获取模拟器系统属性。找到[net.eth0.dns1]这一项，发现后面为10.0.2.3，接下来我们输入setprop net.eth0.dns1 192.168.1.1.后面的ip也可为其他，不过我没尝试。（没有[net.eth0.dns1]的话因为系统是Android9.0及以上，建议换到8.0及以下）

			网上很多帖子是[net.dns1]，不过我的模拟器上面dns1前面有eth0，这个大家根据自己的模拟器情况决定。

			然后打开模拟器的数据连接。即可使用模拟器的谷歌浏览器上网。
			————————————————
	
		d,经过以上操作。还是不能上网。
			模拟器wifi状态为[connected no internet]。
			重启后，变为[connected]。可以正常上网了。
		e,配置dns用的ip为192.168.1.1，能否电脑的其它地址。
20 android studio启动时默认加载的工程设置
	20.1 【Android Studio】修改默认打开上个项目的设置 
		https://www.jianshu.com/p/44288b0be8c3 
		
		Preference-> Appearance & Behavior -> System Settings 里面
21 内存设置
	21.1 RAM set:such as the core IDE or Gradle daemon
		File | Settings | Appearance & Behavior | System Settings | Memory Settings

22. Android studio导入eclipse项目
	22.1 Android studio导入eclipse项目（亲测）
		https://www.cnblogs.com/stars-one/p/7536284.html 
	22.2 Android Studio 导入 Eclipse 项目问题 
		https://blog.csdn.net/doris_d/article/details/79466926 
		
		a,目录结构问题
			Android Studio 项目的目录结构与 Eclipse 不一致，若想在导入项目后仍可在 Eclipse 中开发，则不能更改目录结构，那么只需要在 Module 的 build.gradle 的 android 领域中进行配置。
			sourceSets {
				main {
					java.srcDirs = ['src']
					res.srcDirs = ['res']
					assets.srcDirs = ['assets']
					jni.srcDirs = ['jni']
					jniLibs.srcDirs = ['libs']
					manifest.srcFile 'AndroidManifest.xml'
				}
			}
		b,编码问题,等多个问题记录。
23 androidstuido ndk-build 配置ndk只编译一种abi
		https://blog.csdn.net/leunging/article/details/111593353 
		
24 android studio 下ndk项目cpp自动补全,使用ndk-build编译Android.mk项目。
	24.1 AndroidStudio现有项目添加NDK支持（ndk-build编译） 
		https://niubashaoye.blog.csdn.net/article/details/81050052 
		
		项目添加C/C++引用到Grade中
		切换到Android视图，项目名右键->Link C++ Project with Gradle->选择ndk-build->然后选择Android.mk的项目路径； 
		
		b,配置还有问题
			androidstudio so,  More than one file was found with OS independent path 'lib/armeabi-v7a/xxx.so
			
			全部删除，重新编译即可。该方式编译成功后，直接打包apk,apk就自动包含so了。如果将*.so拷贝到(src/main/jniLibs)目录下，需要禁用编译jni编译。否则还会提示这个重复so错误。
			
		c,More than one file was found with OS independent path 'lib/armeabi/xxxx.so'解决方法
			在build.gradle(Module: app)里面，加上一句：
			packagingOptions {
				exclude 'lib/armeabi/xxx.so'
			}
			exclude后面跟的内容就填写你的错误的path里的内容即可，记得sync.
			如果exclude后path里面仍然是相同的值，可以尝试一下Build->Clean Project.
			
			该方式不可取。参考b就行。
		d,在ndkbuild完成后把生成的so文件复制到jniLibs
			https://blog.csdn.net/qwer492915298/article/details/88424922 
	24.2 
25 android studio 打包多个so库(Android.mk 和Application.mk)
	https://blog.csdn.net/qwer492915298/article/details/88424922 

 
26 Unable to execute Clang-Tidy.cCannot create propert=Diagnostcs for JavaBean=comjetorains.cdr.ang,.daemon.clang.tidy.ClangTidyYamlLoadersSYamlData@
	
	26.1 NDK issues with Studio 3.5.2 on Ubuntu
		https://stackoverflow.com/questions/59888112/ndk-issues-with-studio-3-5-2-on-ubuntu 
		
		a,This is a known issue. The clang-tidy integration in AS 3.5 is not compatible with NDK r21. It's fixed in 4.0. 
	26.2 unable to execute clang-tidy 
		https://blog.csdn.net/jacke121/article/details/114683665 
27 编译apk失败：Cause: duplicate entry: META-INF/MANIFEST.MF
	27.1 详细错误信息：
		【Could not resolve all files for configuration ':app:releaseCompileClasspath'.
		   > Failed to transform artifact 'support-v4.aar (com.android.support:support-v4:23.1.1)' to match attributes {artifactType=android-classes, org.gradle.usage=java-api}.
			  > Execution failed for AarToClassTransform: C:\Users\Administrator\.gradle\caches\modules-2\files-2.1\com.android.support\support-v4\23.1.1\353820becdd80e136db280bd76725e67a7ddc053\support-v4-23.1.1.aar.
			 > duplicate entry: META-INF/MANIFEST.MF】
	27.2 Android编译异常` Cause: duplicate entry: META-INF/MANIFEST.MF` 
		https://blog.csdn.net/mp624183768/article/details/103356348/ 
		博主方案更换gradle插件及版本。【仅供参考，我倒觉得无需这样做】
	27.3 尝试分析解决
		A:删除对应目录下的support-v4.aar，编译时会立即出现该文件。[无效]
		B:直接指定v4包：implementation 'com.android.support:support-v4:28.0.0'
			[有效]，但同时产生错误【28】
	
28 如何使用-Xlint:deprecation重新编译(How to recompile with -Xlint:deprecation)
	https://www.it1352.com/1558583.html 
	需要在项目级build.gradle文件中添加以下内容:
	allprojects {
		...

		gradle.projectsEvaluated {
			tasks.withType(JavaCompile) {
				options.compilerArgs << "-Xlint:deprecation"
			}
		}   
	}
29 Android Studio与其IntelliJ IDEA相比, 其差异与利弊主要有哪些?
	https://www.zhihu.com/question/27763224 
30 如何通过Android Studio发布library到jCenter和Maven Central
	https://blog.csdn.net/wxx614817/article/details/52755558 
31 新发的日常小问题——修改AndroidStudio的AVD下载路径
	https://blog.csdn.net/linxinfa/article/details/109278581 
	
	a，搬移.android文件夹
	在D盘新建一个avd文件夹
	如：D:\software\AndroidStudio\avd。
	把刚刚C盘的.avd文件夹剪切过来。
	然后修改C盘中的.ini文件中avd文件路径
	
	b,设置环境变量
	如果你还没下载过AVD，那么设置环境变量ANDROID_SDK_HOME，这样AndroidStudio就会把AVD下载到环境变量ANDROID_SDK_HOME对应的目录了，而不会默认下到C盘中。
	
32. androidstudio gradle github上的依赖，下载失败
	
	compile 'com.github.smart-fun:XmlToJson:1.3.5'
	{
		Could not download RoundCornersView.aar (com.github.smart-fun:XmlToJson:1.3.5): Skipped due to earlier error
	}
	ide提示下载失败。但实际是下载下来了。但因为工具错误。编译apk是不能进行的。
	
	试试：
		 
	github的依赖下载不了
	https://www.csdn.net/tags/OtDacg3sOTkzMDEtYmxvZwO0O0OO0O0O.html
		git config --global url."https://".insteadOf git://
		npm cache clean --force
		【不行】
		
	或者试试：
		FLIE--Sync Project with Gradle Files能够解决。【不行】
	
	androidstudio android project download Dependent library or jar from github ,download fail
	
	jitpack.io failed to resolve github repo
	https://stackoverflow.com/questions/33058358/jitpack-io-failed-to-resolve-github-repo
	
	Guide to publishing libraries
	https://jitpack.io/docs/BUILDING/#gradle-projects
	Publish an Android library
		https://jitpack.io/docs/ANDROID/
	
33. The specified Gradle distribution 'https://services.gradle.org/distributions/gradle-4.6-all.zip' 
	does not appear to contain a Gradle distribution.
34.
	ERROR: android-apt plugin is incompatible with the Android Gradle plugin.  
	Please use 'annotationProcessor' configuration instead.
	
	https://blog.csdn.net/pkandroid/article/details/78391096
35. ndk
	35.1 INFO: The following project options are deprecated and have been removed: 
		android.useDeprecatedNdk
		NdkCompile is no longer supported
		
		警告:gradle.properties中useDeprecatedNdk标志启用的不推荐的NDK集成将很快从Android Gradle插件中删除.
	35.2 ndk.dir property 过时了，使用android.ndkPath in build.gradle
		NDK was located by using ndk.dir property. This method is deprecated and will be removed in a future release. Please use android.ndkVersion or android.ndkPath in build.gradle to specify the NDK to use. https://developer.android.com/r/studio-ui/ndk-dir
		
		https://stackoverflow.com/questions/66854763/how-can-i-specify-custom-ndk-path-in-android-studio-4-1-3-gradle-6-8-3
		
36. Android Studio添加aar依赖的两种方式
	http://t.zoukankan.com/tc310-p-10024441.html
37. ERROR: Project module: Only Jar-type local dependencies are supported.
	【androidstudio android project添加aar方式。】
	
	https://www.shuzhiduo.com/A/RnJWOZ7RJq/
	{
		compile fileTree(dir: 'libs', include: ['*.jar','*.aar'])

		老老实实写成 compile fileTree(include: ['*.jar'], dir: 'libs') 就没事了，不要加什么aar
	}
	{
		另一种添加aar的方式：

		File -> New -> New Module -> Import JAR/AAR Package,选择路径并命名，然后把新加的module添加到工程的Dependencies（依赖）里面去。

		具体操作是 File -> Project Structure -> 左边找到app ->  右边点tab切换到Dependencies，最右边有一个小+号，然后选最下面的，Module dependency 然后不说了。
	}
38. caused by: java.lang.RuntimeException: com.android.build.api.transform.TransformException: 
	java.util.zip.ZipException: duplicate entry: com/example/sdk2/BuildConfig.class
39. AndroidStudio一步步教你修改项目包名（最详细，最易懂）
	http://t.zoukankan.com/jpfss-p-9875582.html
	
	rename package;
	注意文本字符串中包含的包名，对应替换掉。
	如：Uri apkUri = FileProvider.getUriForFile(context, "com.ibotn.newapp.fileprovider", file);
		以及：private static final String NOTIFICATION_CHANNEL = "com.ibotn.newapp";
		
40,	Unknown host 'dl.google.com'. You may need to adjust the proxy settings in Gradle.
	Enable Gradle 'offline mode' and sync project
	Learn about configuring HTTP proxies in Gradle
	
	[参考]
	https://www.jianshu.com/p/7afefac0ad30
	{
		一般host文件保存在C:\Windows\System32\drivers\etc这个路径下
		203.208.40.36 dl.google.com 然后保存就可以
	}
	参考2：
		https://blog.csdn.net/qq_38350635/article/details/115750876
41,运行旧工程遇到 提示不能下载gradle3.5.5.jar ....No cached version available for offline mode 报错
	https://blog.csdn.net/loveseal518/article/details/125652708
42,Android studio创建类时设置作者、日期等统一注释模板的方法
	https://blog.csdn.net/ambitionLlll/article/details/104086390
	{打开Andorid studio，点击File—>Settings->点击Editor选项—>File and Code Templates—>点击右侧的Includes—>选中File Header}
	/**
	 * @date ${DATE},${TIME}
	 * @author jy
	 * @description:
	 */
	/**
	 * create by author on ${DATE},${TIME} <br/>
	 * description:
	 */
43 transformJackWithJackForDebug -D jack.android.min-api-level=21 -D jack.annotation-processor.source.output=

	Execution failed for task ':IbotnLauncher:transformJackWithJackForDebug'.
	> com.android.build.api.transform.TransformException: com.android.ide.common.process.ProcessException:
	 Error while executing java process with main class com.android.jack.Main with arguments 
	{-D jack.dex.optimize=true -D jack.reporter=sdk -D jack.dex.debug.vars=true --classpath
	
	
	jack.import.type.policy=keep-first -D jack.import.resource.policy=keep-first 
	--multi-dex native -D jack.java.source.version=1.8 --incremental-folder


	preJackPackagedLibraries\release\jars\8000\1f\xxx-062c6aaddb2ab67b1bb1f372717f317c2dd1fb1e.jar --import 
	
	43.2 科大msc升级，msc-1135-to 1140，原项目IbotnLauncher编译报错：
		{plugin for gradle:2.3.3,gradle-4.4-all.zip}
	
		AGPBI: {"kind":"error","text":"Error converting bytecode to dex:\n
		Cause: Dex cannot parse version 52 byte code.\n
		This is caused by library dependencies that have been compiled using Java 8 or above.\n
		If you are using the \u0027java\u0027 gradle plugin in a library submodule 
		add \ntargetCompatibility \u003d \u00271.7\u0027\nsourceCompatibility \u003d \u00271.7\u0027\nto that submodule\u0027s build.gradle file.\n...
		while parsing com/iflytek/cloud/DataDownloader.class","sources":[{}],"original":"PARSE ERROR:\nunsupported class file version 52.0\n...
		while parsing com/iflytek/cloud/DataDownloader.class\n","tool":"Dex"}
		
		AGPBI: {"kind":"error","text":"1 error; aborting","sources":[{}]}
		
		* What went wrong:
		Execution failed for task ':IbotnLauncher:transformClassesWithDexForRelease'.
		> com.android.build.api.transform.TransformException: java.lang.RuntimeException: com.android.ide.common.process.ProcessException: 
		java.util.concurrent.ExecutionException: com.android.ide.common.process.ProcessException:
		Error while executing java process with main class com.android.dx.command.Main with arguments {--dex --num-threads=4 --multi-dex 
		--output D:\juying\as1_5project\ibotnsvn\IbotnLauncher_AS_NEWUI\IbotnLauncher\build\intermediates\transforms\dex\release\folders\1000\2\Msc_d25bc84c75a3441e039ea21d2ed4e46f7bf60cfc 
		D:\juying\as1_5project\ibotnsvn\IbotnLauncher_AS_NEWUI\IbotnLauncher\libs\Msc.jar}
		
		#：AGPBI: {"kind":"error","text"...
			##https://blog.csdn.net/AliEnCheng/article/details/103522116
		
		#:以上一堆问题。各种尝试解决，都无效。
			##升级：{plugin for gradle:3.5.2,gradle-5.4.1-all.zip}
	43.3 
		q1:compileReleaseAidl
		aidl.exe  aidl.cpp refusing to generate code from aidl file defining parcelable
		
		#参考：
		https://blog.csdn.net/qq_35501560/article/details/104928761
			->替换aidl.exe后，q2还存在。
		
		
		q2:com\ibotn\ibotnphone\IContactAidlInterface.java:59: 错误: 解析时已到达文件结尾
			private static class Proxy implements com.ibotn.ibotnpho
			->根据aidl文件编译出的java 文件不完整。
			
			参考：
			https://blog.csdn.net/dkbnull/article/details/103414016
			
			#去掉aidl中的中文。解决
			#因为Gradle 5.x版本，编译时后台内存堆大小从1GB降为了512M，可能导致aidl编译后无足够的内存缓存，进而导致所生成的java文件都不完整，解决办法如下：

				gradle.properties文件修改如下配置。#该方式目前实验不能解决问题。

				修改org.gradle.jvmargs的值
				gradle.properties文件修改如下配置
				org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8

44 Could not determine artifacts for com.android.support:support-v4:25.4.0
	Could not get resource 'https://dl.google.com/dl/android/maven2/com/android/support/support-v4/25.4.0/support-v4-25.4.0.aar'.
	
	更换maven仓库地址，依然报错。可能源头仓库就没了。
	-采用高版本的，如:28.0.0。
	-如需更高的，google已经不再提供，可以使用androidx库。
	-参考IbotnNewApp_family配置就可以了。