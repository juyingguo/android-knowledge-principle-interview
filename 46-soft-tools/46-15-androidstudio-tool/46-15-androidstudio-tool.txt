1. Android studio 将 Module 打包成 Jar 包,aar.
	1.1 Android studio 将 Module 打包成 Jar 包
		https://www.cnblogs.com/xinaixia/p/7660173.html
		
		1.1.1自定义生成 jar 包
			在 build.gradle 文件中加入如下代码： 方式一：
			在android节点外添加如下代码
			以WheelView为例。
			
			def _BASENAME = "WheelViewJar";
			def _VERSION = "_V1.3.4";
			def _DestinationPath = "build"; //生成jar包的位置
			//def zipFile = file('build/intermediates/bundles/default/classes.jar'); //待打包文件位置
			def zipFile = file('build/intermediates/packaged-classes/release/classes.jar'); //待打包文件位置,as3.5对应的目录，as版本不同可能会有所不同。根据实际情况添加即可。
			
			注意源jar不是这个目录下面的：build\intermediates\full_jar\debug\createFullJarDebug，编译出来的jar无法使用。其它项目导入该jar包时，无法解析BuildConfig.java
			
			task deleteBuild(type:Delete){
				delete _DestinationPath + _BASENAME + _VERSION + ".jar"
			}

			task makeJar(type:Jar){
				from zipTree(zipFile)
				from fileTree(dir:'src/main',includes:['assets/**']) //将assets目录打入jar包  
				baseName = _BASENAME + _VERSION
				destinationDir = file(_DestinationPath)
			}

			makeJar.dependsOn(deleteBuild, build)
	1.2 Android Studio 编译release的aar、jar包。【好用】
		https://blog.csdn.net/wenwins/article/details/80388361
		
		在 build.gradle 文件中加入如下代码： 方式一：
			在android节点外添加如下代码
			以WheelView为例。
		
		//自定义生成 jar 包
		//task to delete the old jar
		task deleteOldJar(type: Delete) {
			delete 'release/WheelViewJar_V1.3.4.jar'
		}
		//task to export contents as jar
		task makeJar(type: Copy) {
			delete 'release/WheelViewJar_V1.3.4.jar' //删除之前的旧jar包
			from('build/intermediates/packaged-classes/release/') //从这个目录下取出默认jar包
			into('release/') //将jar包输出到指定目录下
			include('classes.jar')
			rename('classes.jar', 'WheelViewJar_V1.3.4.jar') //自定义jar包的名字
		}
		makeJar.dependsOn(build)
		
		点击右边的Gradle侧边栏：makeJar ,或者exportJar
			
2. Android Studio：unsupported class file version 52.0报错
	2.1 Android Studio：unsupported class file version 52.0报错
		https://blog.csdn.net/u011435933/article/details/80923285?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase
3. 	ERROR: Jack is required to support java 8 language features. Either enable Jack or remove sourceCompatibility JavaVersion.VERSION_1_8.
	Affected Modules:
	
	https://blog.csdn.net/u011781521/article/details/52702482
	
		在build.gradle文件的defaultConfig中添加一下就可以了..

		jackOptions {
			enabled true
		}
		
		-source 1.7 中不支持 lambda 表达式
		
4. Android Studio的TODO，FIXME 
	4.1 Android Studio的TODO，FIXME 
		https://blog.csdn.net/kaoshibuguaa/article/details/51536992 
		
5. 添加签名文件。
	5.1 as3.5添加签名文件异常。
		老版本是不会报错的。
		
		Key was created with errors:

		Warning:
		JKS 密钥库使用专用格式。建议使用 "keytool -importkeystore -srckeystore D:\juying\as1_5project\sp\AndroidJavaDemoTestForAS\sign\signature.jks -destkeystore D:\juying\as1_5project\sp\AndroidJavaDemoTestForAS\sign\signature.jks -deststoretype pkcs12" 迁移到行业标准格式 PKCS12。
		
		
		解决方法参考：
			Android APK签名 JKS 密钥库使用专用格式。建议使用 “keytool -importkeystore -srckeystore E:\xxxxxx- pkcs12“ 迁移到行业标准格式		
			https://blog.csdn.net/xkai007/article/details/106073091
			
			直接在androidstudio控制台中，输入：
			
				keytool -genkey -alias signature -keypass 123456 -keyalg RSA -keysize 2048 -validity 36500 -keystore D:\juying\as1_5project\sp\AndroidJavaDemoTestForAS\sign\signature.keystore  -storepass 123456
				回车后，需要继续按照提示输入相关信息，依次填写好信息后，输入 Y 确认信息即可。
			
			查看密钥详细输出信息：
				keytool -list -v -keystore D:\juying\as1_5project\sp\AndroidJavaDemoTestForAS\sign\signature.keystore 
		
6. Android Studio向项目添加C/C++原生代码教程 
	https://www.cnblogs.com/lsdb/p/9337285.html
	
7. 编译release or debug  apk失败。
	7.1 
		Caused by: com.android.builder.internal.aapt.v2.Aapt2Exception: AAPT2 error: check logs for details
		at com.android.builder.png.AaptProcess$NotifierProcessOutput.handleOutput(AaptProcess.java:443)
		at com.android.builder.png.AaptProcess$NotifierProcessOutput.err(AaptProcess.java:395)
		at com.android.builder.png.AaptProcess$ProcessOutputFacade.err(AaptProcess.java:312)
		at com.android.utils.GrabProcessOutput$1.run(GrabProcessOutput.java:104)
			
		解决过程参考：
		https://blog.csdn.net/zhouzhangfu/article/details/84789908
			构建 App 的时候，打开 Build 窗口，点击 “Toggle View” 切换到文本输出。
			在这种视图下，可以看清楚 gradle 的执行输出。如【7.2】错误详情。
	7.2
		mipmap-hdpi\katong01_200_300.png: error: failed to read PNG signature: file does not start with PNG signature.
	
		解决过程参考：
			https://blog.csdn.net/qiushisoftware/article/details/92763069		
			选中图片-右键-打开方式-画图，打开后另存为，选择png格式，删除项目中旧的logo并将最新的logo图片拷贝到项目中。

		重新打包，打包成功。
	7.3 使用或覆盖了已过时的 API。
		注: 某些输入文件使用了未经检查或不安全的操作。
		请使用 -Xlint:deprecation 重新编译。
		请使用 -Xlint:unchecked 重新编译。
	
	7.4 编译release成功
		编译debug失败
		AGPBI: {"kind":"error","text":"UNEXPECTED TOP-LEVEL ERROR:","sources":[{}]}
		AGPBI: {"kind":"error","text":"\tat com.android.dx.command.Main.main(Main.java:106)","sources":[{}]}
		:transformClassesWithDexForDebug FAILED
		
		参考博客：https://blog.csdn.net/qq_29984105/article/details/100514691
			最后删除掉
			C:\Users\***\.gradle\caches \ transforms-1

			才解决
8. android studio 编译处理的apk，在设备上运行后报：couldn't find "libxxxx.so"的错误解决办法
	https://blog.csdn.net/qq_41063141/article/details/86546113
	
	4.
		如果将so库文件其放在了libs下，则需要做如下配置：

		sourceSets { main { jniLibs.srcDirs = ['libs'] } }
9. android studio external tool 自定义工具
	9.1 javah
		
		  