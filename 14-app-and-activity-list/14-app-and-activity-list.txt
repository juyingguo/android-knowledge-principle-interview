一、Activity的启动过程

	1.1、一张图弄清Activity的启动过程
		此图基于9.0的Android源码
		https://www.jianshu.com/p/f0c21f867dd9
		
	1.2、（Android 9.0）Activity启动流程源码分析 
		【挺好的。】
		https://blog.csdn.net/lj19851227/article/details/82562115
		
	1.3、Android源码分析-Activity的启动过程 
		任玉刚播客
		https://blog.csdn.net/singwhatiwanna/article/details/18154335
		
	1.4、Android源码解析之（十四）-->Activity启动流程 
		https://blog.csdn.net/qq_23547831/article/details/51224992
		
	1.5、从应用角度看Android源码 - 是谁调用的ActivityThread的main方法  
		4.1、https://blog.csdn.net/w1143408997/article/details/76862002
二、instrumentation  
	
	2.1、Instrumentation的理解 
		https://www.jianshu.com/p/5a7768f22b36
	
三、Android面试题（31）-App启动流程
	
	3.1、Android面试题（31）-App启动流程 
		https://blog.csdn.net/pgg_cold/article/details/79491791

四、从应用角度看Android源码 - 是谁调用的ActivityThread的main方法 
	
	4.1、https://blog.csdn.net/w1143408997/article/details/76862002

五、Activity 生命周期，onNewIntent何时调用？
	
	5.1、当触发onNewIntent方法时，activity经历的生命周期 
		https://blog.csdn.net/ToOak_And/article/details/80702187
		
	5.2、 Activity的onNewIntent方法执行时间
		【详细些】
		https://blog.csdn.net/u013398960/article/details/74496242
	5.3、Android：onNewIntent()触发机制及注意事项 
		https://blog.csdn.net/findsafety/article/details/9664061
		
	5.4，使用onNewIntent 主页面的切换Fragment页面
		【启动模式相关】
		https://blog.csdn.net/w2316/article/details/88877922
		
六、activity启动模式与Intent Flag

	6.1、FLAG_ACTIVITY_CLEAR_TASK 
		https://blog.csdn.net/new_abc/article/details/13736855#
		
		调试代码：*\AndroidJavaDemoTestForAS\app\src\main\java\com\activity\taskstack\TaskStackMainActivity
		
	6.2、(面试题)应用a,activity-A 启动应用B的activity-B（startmode= singleTask），设置FLAG_ACTIVITY_CLEAR_TASK ，
		结果如何。
		栈清空，重新创建activity-B。
		调试代码：*\AndroidJavaDemoTestForAS\app\src\main\java\com\activity\taskstack\TaskStackActivityB
		
	6.3、关于Android的Intent.FLAG_ACTIVITY_CLEAR_TOP 	
		https://blog.csdn.net/h3c4lenovo/article/details/17285353
		
		
		Android 关闭多个视图Intent.FLAG_ACTIVITY_CLEAR_TOP用法
		https://blog.csdn.net/LVXIANGAN/article/details/42120951
		
	6.4、taskAffinity 
		android:taskAffinity="tatest"
		[INSTALL_PARSE_FAILED_MANIFEST_MALFORMED]
		android:taskAffinity="com.taskAffinity.b" 应含有com及.
		https://www.jianshu.com/p/409c37089503
七、Activity 与 Window、PhoneWindow、DecorView 之间的关系详解
	
	7.1、Activity 与 Window、PhoneWindow、DecorView 之间的关系详解 
		https://blog.csdn.net/weixin_41101173/article/details/79685305
	
八、监听apk安装完成的广播. 
	8.1、监听apk安装完成的广播. 
		Android apk安装监听的几个广播 
	8.2、Android 监听apk安装替换卸载广播 
		https://www.cnblogs.com/rayray/p/3178403.html
9. Android manifest
	9.1 Android manifest文件中的各种属性在API什么位置 
		如果你按了SDK,找到你的知SDK的文件，下面道这个就是。android-sdk-windows/docs/guide/topics/manifest/manifest-intro.html
		
10 moveTaskToBack(true); 
	10.1 moveTaskToback退后台的用法及作用 
	
11 activity小知识点。
	11.1 【Android】如何知道某个Activity是否在前台？
		https://www.jianshu.com/p/f5fb87d99b5d
			楼主错误：：你这是判断某一个应用是否在前台而不是某个activity是吗？因为processName就是包名
	11.2 
		Android 判断某个Activity 是否在前台运行
		https://blog.csdn.net/yushulinfengprc/article/details/53431232
		https://www.jianshu.com/p/f5fb87d99b5d
		
		注意看内容：官方不建议使用这种做法。//待继续研究好的方案。
		对于一个应用内部判断自己的activity是否位于当前应用的最前台（不一定是android系统桌面的最前台，比如打开了其它应用在最前台）。
		可以使用：Application.ActivityLifecycleCallbacks。根据onActivityResumed及相关回调方法处理即可。
		ibotnlauncher中这两种方法都有的。
	11.3 Android开发：activity去除标题栏的方法
		https://blog.csdn.net/android157/article/details/80774143
		
		requestWindowFeature(Window.FEATURE_NO_TITLE);，现在基本就可以去除标题栏了。
		但是如果Activity继承了AppCompatActivity，这个就失效了.
			直接用supportrequestwindowFeature
		
		Android中全屏 取消标题栏，TabHost中设置NoTitleBar的三种方法
		https://www.cnblogs.com/zdz8207/archive/2013/02/27/android-tabhost-notitlebar.html
		
	11.4 activity设置透明。
		11.4.1 如何设置一个activity透明（转）
			https://www.cnblogs.com/softidea/p/5297751.html
				1. 在AndroidManifest.xml文件中设置：
				android:theme="@android:style/Theme.Translucent
				2.以及在代码中配置。
					代码可以和AndroidManifest.xml配置文件一起使用。
					单独使用代码，可能效果达不到，需要调试尝试参数值
		11.4.2 Activity全透明实现
			https://blog.csdn.net/liu_jun_y/article/details/9178301
				【该方式，同为为11.4.1中系统源码部分。】
				通过设置样式改变透明度：
				< style name="Transparent">

			　　< item name="android:windowBackground">@color/transparent< /item>

			　　< item name="android:windowIsTranslucent">true< /item>

			　　< item name="android:windowAnimationStyle">@+android:style/Animation.Translucent< /item>

			　　< /style>
			
		11.4.3 windowBackground，windowIsTranslucent区别？
	11.5 Android 改变控件位置的三种方式
		https://blog.csdn.net/qq_36188774/article/details/82715027
		
		方式一：改变布局参数
				RelativeLayout.LayoutParams layoutParams = (RelativeLayout.LayoutParams) mGirl.getLayoutParams();
                layoutParams.leftMargin = mGirl.getLeft()+100;
                layoutParams.topMargin = mGirl.getTop()+100;
				
		11.5.2 android动态设置控件的大小和位置
			https://blog.csdn.net/wocena/article/details/52485051
                mGirl.setLayoutParams(layoutParams);