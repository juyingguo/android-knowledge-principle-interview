1. scale是啥？

	//var game = new Phaser.Game(800, 600, Phaser.CANVAS, '', { preload: preload, create: create, update: update });
	//The default state object. A object consisting of Phaser.State functions (preload, create, update, render) or null.
	
	game = new Phaser.Game(.);//
	
	//load=Phaser.Loader，
	game.load.image('ground', 'assets/platform.png');
	game.load.spritesheet('dude', 'assets/dude.png', 32, 48);
	
	// add = Phaser.GameObjectFactory; group() = Phaser.Group 。
	platforms = game.add.group(); //platforms 为一个组，以该组为基准，创建的角色内容都在这个组内。显示位置也在这个组内
	
	platforms.enableBody = true;
	
	//create=DisplayObject -
	//The child that was created: will be a Phaser.Sprite unless #classType has been changed.
	//Phaser.Sprite Extends 很多类
	var ground = platforms.create(0, game.world.height - 64, 'ground');
	
	
	
	ground.scale.setTo(2, 2);
	
2.
	player = game.add.sprite(32, game.world.height - 150, 'dude');//player => sprite(.) = Phaser.Sprite
	
	//physics=Phaser.Physics;arcade=Phaser.Physics.Arcade
	game.physics.arcade.enable(player);
	
	// body=   	Phaser.Physics.Arcade.Body|Phaser.Physics.P2.Body|Phaser.Physics.Ninja.Body|null
	//bounce = Phaser.Point 
	player.body.bounce.y = 0.2;
	
	player.body.gravity.y = 300; // gravity = Phaser.Point 
	player.body.collideWorldBounds = true;
	player.animations.add('left', [0, 1, 2, 3], 10, true);//animations = Phaser.AnimationManager
	player.animations.add('right', [5, 6, 7, 8], 10, true);
	
	//创建星星群组
	stars = game.add.group();
	stars.enableBody = true;
3.	
	function update() {
	console.log("update()");
	game.physics.arcade.collide(player, platforms);
	
	player.body.velocity.x = 0;
	    if (cursors.left.isDown)
	    {
					console.log("update(),cursors.left.isDown = true.");
	        player.body.velocity.x = -10;
	        player.animations.play('left');
	    }
	    else if (cursors.right.isDown)
	    {
					console.log("update(),cursors.right.isDown = true.");
	        player.body.velocity.x = 10;
	        player.animations.play('right');
	    }
	    else
	    {
	        player.animations.stop();
	        player.frame = 4;
	    }
	    if (cursors.up.isDown && player.body.touching.down)
	    {
	        player.body.velocity.y = -350;
	    }
}

4. 马拉松
	* @method Phaser.StateManager#add
	this.states[key] = newState;
	
		game.StatesNew.boot = function() {
		console.log("game.StatesNew.boot = function(),this = " + this);
		this.preload = function() {
			console.log("game.StatesNew.boot = function(),this.preload = function(),this = " + this);
			console.log("game.StatesNew.boot = function(),this.preload = function(),typeof(GAME) = " + typeof(GAME));
			if (typeof(GAME) !== "undefined") {
				this.load.baseURL = GAME + "/";
			}
			console.log("xzx---->game.StatesNew.boot");
			this.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;
			/* scale= Phaser.ScaleManager; pageAlignHorizontally    ,源码处定义：Object.defineProperty(Phaser.ScaleManager.prototype, "pageAlignHorizontally", {...
				如何理解。
			*/
			this.scale.pageAlignHorizontally = true;
			this.scale.pageAlignVertically = true;
			this.scale.refresh();
		}; 
		this.create = function() {
			console.log("game.StatesNew.boot = function(),this.create = function(),this = " + this);
			game.state.start('preload');
		};
		//20201223新增 update方法，加载时也会调用。
		this.update = function(){
			console.log("game.StatesNew.boot = function(),this.update = function(),this = " + this);
		}
	};
	
	game.add.button((game.width - 381) / 2, 1334 - 330, 'btn-ready', function() {
			game.state.start('play');
		});
		
		// DisplayObject，Phaser.Sprite，animations-> animations :Phaser.AnimationManager,
		var badi = titleGroup.create((titleGroup.width - _Con_sprite.buddy.width) / 2, (titleGroup.height - _Con_sprite.buddy.height /* - 200 */) / 2, 'buddy');
		badi.animations.add('move');
		
		
		this.bg = game.add.tileSprite(0, 0, _Con_sprite.background.width, _Con_sprite.background.height, 'background');
	4.2 google浏览器，声音异常提示
		phaser-2.6.2.js:77080 The AudioContext was not allowed to start. It must be resumed (or created) after a user gesture on the page. https://goo.gl/7K7WLu
		boot @ phaser-2.6.2.js:77080
		boot @ phaser-2.6.2.js:36005
		Phaser.Device._readyCheck @ phaser-2.6.2.js:60824

		Google浏览器不支持audio/video自动播放问题
		https://blog.csdn.net/weixin_44198965/article/details/91402373
		
			或者Chrome浏览器，属性，添加，前面有空格
			--autoplay-policy=no-user-gesture-required
			允许从文件访问。
			 --allow-file-access-from-files --autoplay-policy=no-user-gesture-required
		
		模拟点击：
		原生js自动触发onclick事件
		https://www.cnblogs.com/toggle/p/11887417.html
		
5. 一些类、函数、对象快捷记录
	5.1 sprite(x, y, key, frame, group) → {Phaser.Sprite}
		Create a new Sprite with specific position and sprite sheet key.

		At its most basic a Sprite consists of a set of coordinates and a texture that is used when rendered.
		They also contain additional properties allowing for physics motion (via Sprite.body), input handling (via Sprite.input),
		events (via Sprite.events), animation (via Sprite.animations), camera culling and more. Please see the Examples for use cases.