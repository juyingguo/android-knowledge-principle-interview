0.
	0.1 通用部分参考其它aosp android版本的编译配置方法。
1.Android5.0环境搭建，源码编译，模拟器启动。
	https://blog.csdn.net/m0_37655835/article/details/59680479? 
	
	1.2 Ubuntu16.04配置Android5.0编译环境
		https://blog.csdn.net/weixin_30915951/article/details/95101684 
		
	1.3 UBUNTU16.04编译ANDROID源码系列二—— ANDROID 5.1和ANDROID 6.0及踩坑
		https://www.freesion.com/article/705929676/ 
		
2. https://blog.csdn.net/weixin_30915951/article/details/95101684  
	
	1、安装jdk7
		参考：35-04-linux-install-jdk.txt
	2、安装编译所需的依赖

		以下提到的编译需要依赖的程序，请务必确认每个都安装成功：

		sudo apt-get update

		sudo apt-get install -y git flex bison gperf build-essential libncurses5-dev:i386 
		sudo apt-get install libx11-dev:i386 libreadline6-dev:i386 libgl1-mesa-dev g++-multilib 
		sudo apt-get install tofrodos  python-markdown libxml2-utils xsltproc zlib1g-dev:i386 
		sudo apt-get install dpkg-dev libsdl1.2-dev libesd0-dev 
		sudo apt-get install git-core gnupg flex bison gperf build-essential 
		sudo apt-get install zip curl zlib1g-dev gcc-multilib g++-multilib 
		sudo apt-get install libc6-dev-i386 
		sudo apt-get install lib32ncurses5-dev x11proto-core-dev libx11-dev 
		sudo apt-get install lib32z-dev ccache 
		sudo apt-get install libgl1-mesa-dev libxml2-utils xsltproc unzip m4
		
	3. 异常
		3.1 a,
				host SharedLib: libnativehelper_32 (out/host/linux-x86/obj32/lib/libnativehelper.so)
				prebuilts/gcc/linux-x86/host/x86_64-linux-glibc2.11-4.6//x86_64-linux/bin/ld: 
				error: out/host/linux-x86/obj32/SHARED_LIBRARIES/libnativehelper_intermediates/JNIHelp.o: 
				unsupported reloc 43 against global symbol std::string::_Rep::_S_empty_rep_storage
			
			b,prebuilts/gcc/linux-x86/host/x86_64-linux-glibc2.11-4.6//x86_64-linux/include/c++/4.6/bits/basic_string.h:270: 
			error: unsupported reloc 43

			c,libnativehelper/JNIHelp.cpp:310: error: unsupported reloc 43
			
			d,参考播客：
				https://blog.csdn.net/weixin_30915951/article/details/95101684 
				https://blog.csdn.net/LoongEmbedded/article/details/79406726 //同时引用参考多个文章
				
				解决方法：

			source_android代表你的android源码根目录		 

			setp1:		 
			vim <source_android>/art/build/Android.common_build.mk    //修改第119行

			修改前：
			# Host.
			ART_HOST_CLANG := false
			ifneq ($(WITHOUT_HOST_CLANG),true)
			# By default, host builds use clang for better warnings.
			ART_HOST_CLANG := true
			endif
			修改后：
			# Host.
			ART_HOST_CLANG := false
			ifneq ($(WITHOUT_HOST_CLANG),false)
			# By default, host builds use clang for better warnings.
			ART_HOST_CLANG := true
			endif		 

			setp2:	
			cp  /usr/bin/ld.gold   <source_android>/prebuilts/gcc/linux-x86/host/x86_64-linux-glibc2.11-4.6/x86_64-linux/bin/ld
			
			setp3: 执行make update-api后继续编译就正常了。
			
			3.1.2 ld.gold 是什么。转到[01-ubuntu-os-learn-record.txt]