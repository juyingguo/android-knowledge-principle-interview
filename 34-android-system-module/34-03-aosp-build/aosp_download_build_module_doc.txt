1.
	官网-下载编译等文档
	https://source.android.com/docs/setup/about/build-numbers#source-code-tags-and-builds
	
	https://source.android.com/docs/setup/about/build-numbers#source-code-tags-and-builds
	
	https://source.android.google.cn/setup/start/build-numbers android 版本号 标记
		[国内可以访问]
		
	可访问 https://cs.android.com 或 https://github.com/aosp-mirror 在线搜索及浏览 AOSP 源码。
	
2.Android (包含1.6到12)AOSP源码下载(百度网盘)
	https://blog.csdn.net/zwc456baby/article/details/108594712 
3. android系统的源代码获取(亲测可用)
	http://wjhsh.net/donghua-p-5136032.html
	
	1、在线阅读各版本源代码：
	http://androidxref.com/
	2、下载到本地：
	http://blog.csdn.net/yin1031468524/article/details/55053550
	1、下载安装repo 工具

	mkdir ~/bin  
	PATH=~/bin:$PATH  
	curl https://storage-googleapis.proxy.ustclug.org/git-repo-downloads/repo > ~/bin/repo  
	chmod a+x ~/bin/repo  
	mkdir ~/bin
	PATH=~/bin:$PATH
	curl https://storage-googleapis.proxy.ustclug.org/git-repo-downloads/repo > ~/bin/repo
	chmod a+x ~/bin/repo
	2、建立一个放android源码的目录，名字随意

	mkdir android_sourcecode  
	cd android_sourcecode  
	mkdir android_sourcecode
	cd android_sourcecode
	3、初始化repo库

	repo init -u git://mirrors.ustc.edu.cn/aosp/platform/manifest  
	repo init -u git://mirrors.ustc.edu.cn/aosp/platform/manifest
	4、如果需要下载某个特定的android版本，只需通过 －b指定版本号就行

	repo init -u git://mirrors.ustc.edu.cn/aosp/platform/manifest -b android-7.1.1_r22  
	repo init -u git://mirrors.ustc.edu.cn/aosp/platform/manifest -b android-7.1.1_r22
	5、repo库初始化后，就可以直接下载指定版本的android源码，也可以通过指定下载路径，来下载源码中某一个模块

	#下载repo库里所有的android源码  
	repo sync   
	＃指定下载路径，下载某个模块代码  
	repo sync packages/providers/ContactsProvider  
	#下载repo库里所有的android源码
	repo sync 
	＃指定下载路径，下载某个模块代码
	repo sync packages/providers/ContactsProvider
	repo sync命令后接的path，在执行repo init目录下（此处即android _sourcecode）有个.repo文件夹，可以通过

	.repo/manifest.xml 查看各个模块的路径，然后通过repo sycn path来下载学习最新的android源码，查看googel大神们写的代码

	如果以后android源码更新了，只需改变步骤4中－b后指定的路径，Android所有版本列表

	 
	原文地址：https://www.cnblogs.com/donghua/p/5136032.html
	6. Android所有版本列表
		https://source.android.com/source/build-numbers.html#source-code-tags-and-builds
			[旧版，比较最高到android-8.0]
		https://source.android.com/docs/setup/about/build-numbers#source-code-tags-and-builds
			[新版版，比较最高到android-8.0]
		[含有说明]
		#通过[repo init -u git://mirrors.ustc.edu.cn/aosp/platform/manifest  ]会有当前最新完整的分支列表。
	
4,[3.]对应记录：
	eink@eink-virtual-machine:~/bin$ curl  https://storage-googleapis.proxy.ustclug.org/git-repo-downloads/repo > ~/bin/repo
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
	  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
	curl: (60) server certificate verification failed. CAfile: /etc/ssl/certs/ca-certificates.crt CRLfile: none
	More details here: http://curl.haxx.se/docs/sslcerts.html

	curl performs SSL certificate verification by default, using a "bundle"
	 of Certificate Authority (CA) public keys (CA certs). If the default
	 bundle file isn't adequate, you can specify an alternate file
	 using the --cacert option.
	If this HTTPS server uses a certificate signed by a CA represented in
	 the bundle, the certificate verification probably failed due to a
	 problem with the certificate (it might be expired, or the name might
	 not match the domain name in the URL).
	If you'd like to turn off curl's verification of the certificate, use
	 the -k (or --insecure) option.
5.中科大下载android源码
	https://www.cnblogs.com/bobfly1984/p/16367415.html
		
	5.1 curl 下载repo异常
		eink@eink-virtual-machine:~/bin$ curl -sSL  'https://gerrit-googlesource.proxy.ustclug.org/git-repo/+/master/repo?format=TEXT' |base64 -d > ~/bin/repo
		curl: (60) server certificate verification failed. CAfile: /etc/ssl/certs/ca-certificates.crt CRLfile: none
		More details here: http://curl.haxx.se/docs/sslcerts.html

		curl performs SSL certificate verification by default, using a "bundle"
		 of Certificate Authority (CA) public keys (CA certs). If the default
		 bundle file isn't adequate, you can specify an alternate file
		 using the --cacert option.
		If this HTTPS server uses a certificate signed by a CA represented in
		 the bundle, the certificate verification probably failed due to a
		 problem with the certificate (it might be expired, or the name might
		 not match the domain name in the URL).
		If you'd like to turn off curl's verification of the certificate, use
		 the -k (or --insecure) option.
	 
	
	#按照提示命令添加：-k
	#解决参考：https://blog.csdn.net/chengyq116/article/details/96735861
	
	#参考::https://blog.csdn.net/Hepburn_li/article/details/90178519?
		git config --global http.sslverify false
		--验证：对于curl无效。

	$ repo init -u git://mirrors.ustc.edu.cn/aosp/platform/manifest -b android-5.1.1_r38
		repo: warning: Python 2 is no longer supported; Please upgrade to Python 3.6+.
		Downloading Repo source from https://gerrit.googlesource.com/git-repo

		
6.Android系统 AOSP源码编译
	6.1
		[中科大镜像配置相关]
		Android系统 10.0 AOSP源码编译(二)：AOSP源码下载
		https://blog.51cto.com/u_15243273/5426780
				
		AOSP(Android) 镜像使用帮助
		https://lug.ustc.edu.cn/wiki/mirrors/help/aosp/
			此处的帮助文档已经废弃，新的内容请访问 https://mirrors.ustc.edu.cn/help/
		中科大下载android源码
			https://www.cnblogs.com/bobfly1984/p/16367415.html
			
			参考文档
			https://mirrors.ustc.edu.cn/help/aosp.html
			https://zhuanlan.zhihu.com/p/425824622

			https://source.android.google.cn/setup/start/build-numbers android 版本号 标记
			https://source.android.google.cn/setup/build/downloading
	6.2 	
		[清华大学镜像配置相关]
		[中科大镜像配置相关]
		
		aosp下载 & 编译 笔记
		https://www.jianshu.com/p/6214cfacdeab
		
		Android 镜像使用帮助( 清华大学开源软件镜像站)
			https://mirrors.tuna.tsinghua.edu.cn/help/AOSP/
			
			
		注意: 本镜像是 AOSP 镜像，Android SDK因版权原因，我们不能提供镜像服务。

			可访问 https://cs.android.com 或 https://github.com/aosp-mirror 在线搜索及浏览 AOSP 源码。

			参考 Google 教程 https://source.android.com/setup/build/downloading， 将 https://android.googlesource.com/ 全部使用 https://mirrors.tuna.tsinghua.edu.cn/git/AOSP/ 代替即可。

			由于使用 HTTPS 协议更安全，并且更便于我们灵活处理，所以强烈推荐使用 HTTPS 协议同步 AOSP 镜像。

			由于 AOSP 镜像造成CPU/内存负载过重，我们限制了并发数量，因此建议：

			sync的时候并发数不宜太高，否则会出现 503 错误，即-j后面的数字不能太大，建议选择4。
			请尽量选择流量较小时错峰同步。
			过程摘录
			(参考 https://lug.ustc.edu.cn/wiki/mirrors/help/aosp 编写)

			下载 repo 工具:

			mkdir ~/bin
			PATH=~/bin:$PATH
			curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
			chmod a+x ~/bin/repo
			
			或者使用tuna的git-repo镜像(https://mirrors.tuna.tsinghua.edu.cn/help/git-repo/)
				#当前repo主要用于同步AOSP、chromium及chromium OS。
				下载
				curl https://mirrors.tuna.tsinghua.edu.cn/git/git-repo -o repo
				chmod +x repo
				为了方便可以将其拷贝到你的PATH里。

				更新
				repo的运行过程中会尝试访问官方的git源更新自己，如果想使用tuna的镜像源进行更新，可以将如下内容复制到你的~/.bashrc里

				export REPO_URL='https://mirrors.tuna.tsinghua.edu.cn/git/git-repo'
				并重启终端模拟器。

			使用每月更新的初始化包
			由于首次同步需要下载约 190GB 数据，过程中任何网络故障都可能造成同步失败，我们强烈建议您使用初始化包进行初始化。

			下载 https://mirrors.tuna.tsinghua.edu.cn/aosp-monthly/aosp-latest.tar，下载完成后记得根据 checksum.txt 的内容校验一下。

			由于所有代码都是从隐藏的 .repo 目录中 checkout 出来的，所以我们只保留了 .repo 目录，下载后解压 再 repo sync 一遍即可得到完整的目录。

			使用方法如下:

			wget -c https://mirrors.tuna.tsinghua.edu.cn/aosp-monthly/aosp-latest.tar # 下载初始化包
			tar xf aosp-latest.tar
			cd AOSP   # 解压得到的 AOSP 工程目录
			# 这时 ls 的话什么也看不到，因为只有一个隐藏的 .repo 目录
			repo sync # 正常同步一遍即可得到完整目录
			# 或 repo sync -l 仅checkout代码
			此后，每次只需运行 repo sync 即可保持同步。 我们强烈建议您保持每天同步，并尽量选择凌晨等低峰时间
		-传统初始化方法
